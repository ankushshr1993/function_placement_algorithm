#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo master-automation,6.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=12.9
+ echo worker-node1,12.9
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node3,0.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node4,3.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.429/259.453/259.514/0.032 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.429/259.453/259.514/0.032 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.682/109.772/109.893/0.075 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.682/109.772/109.893/0.075 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.892/198.947/198.987/0.034 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.892/198.947/198.987/0.034 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.090/278.162/278.202/0.039 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 278.090/278.162/278.202/0.039 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 819ms'
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.075/0.084/0.095/0.006 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 819ms,rtt min/avg/max/mdev = 0.075/0.084/0.095/0.006 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
error: Unable to create action 'hellopy1': resource already exists (code Hk5WjSJplwSdXwzlS14KgAWRKtnsSdTR)
Run 'wsk --help' for usage.
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[25.99810372],
       [ 4.13289946]]), 'worker-node2': array([[19.72692424],
       [ 0.7459369 ]]), 'worker-node3': array([[19.20786784],
       [ 0.29424794]]), 'worker-node4': array([[22.67134691],
       [ 1.54809785]])}
Test complete.
Process with id: 1 finished in 10.406536469999992 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo master-automation,6.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node1,3.2
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=2.9
+ echo worker-node3,2.9
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=12.1
+ echo worker-node4,12.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.423/259.494/259.601/0.059 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 259.423/259.494/259.601/0.059 ms, pipe 2'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.128.0.35 ip_address
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 109.708/109.753/109.866/0.058 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.708/109.753/109.866/0.058 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 198.890/198.954/199.044/0.053 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.890/198.954/199.044/0.053 ms'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.152.0.33 ip_address
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.174/278.210/278.244/0.028 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 278.174/278.210/278.244/0.028 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 815ms'
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.068/0.081/0.089/0.008 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 815ms,rtt min/avg/max/mdev = 0.068/0.081/0.089/0.008 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
error: Unable to create action 'hellopy2': resource already exists (code hcA0hqbuPFcx9UOWNXSboYTknPcZvD25)
Run 'wsk --help' for usage.
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.08486662],
       [ 1.73601179]]), 'worker-node2': array([[17.8343477 ],
       [-0.62859376]]), 'worker-node3': array([[18.05431352],
       [ 0.12731152]]), 'worker-node4': array([[23.05433065],
       [ 3.17770804]])}
Test complete.
Process with id: 2 finished in 11.610636761999558 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo master-automation,0.0
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node1,3.1
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node3,6.2
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.1
+ echo worker-node4,9.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ awk -F, '{print $2}'
++ grep 10.140.0.33 ip_address
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.422/259.457/259.498/0.031 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.422/259.457/259.498/0.031 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.368/109.423/109.529/0.062 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.368/109.423/109.529/0.062 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 198.908/198.964/199.017/0.040 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.908/198.964/199.017/0.040 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ head -1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.152.0.33
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.185/278.241/278.347/0.054 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 278.185/278.241/278.347/0.054 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 815ms'
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.049/0.074/0.087/0.013 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 815ms,rtt min/avg/max/mdev = 0.049/0.074/0.087/0.013 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ awk -F, '{print $2}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
error: Unable to create action 'hellopy3': resource already exists (code 4D3VcGh47X4vIFTiKRcTQ564iGTa4CuI)
Run 'wsk --help' for usage.
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.88979388],
       [ 2.76920217]]), 'worker-node2': array([[18.98475166],
       [ 0.51790101]]), 'worker-node3': array([[19.46254183],
       [ 1.34599311]]), 'worker-node4': array([[23.89143554],
       [ 3.28375884]])}
Test complete.
Process with id: 3 finished in 12.395320826999523 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.7
+ echo master-automation,9.7
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.9
+ echo worker-node2,5.9
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node3,6.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.1
+ echo worker-node4,9.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.413/259.454/259.536/0.044 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 259.413/259.454/259.536/0.044 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.404/109.486/109.571/0.053 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.404/109.486/109.571/0.053 ms'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.158.0.33 ip_address
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.871/198.929/199.092/0.082 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.871/198.929/199.092/0.082 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.205/278.278/278.328/0.041 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 278.205/278.278/278.328/0.041 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 814ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.085/0.095/0.109/0.008 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 814ms,rtt min/avg/max/mdev = 0.085/0.095/0.109/0.008 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
error: Unable to create action 'hellopy4': resource already exists (code sOkTfPx2aRx2D2CcPBq9Pglh8JkVU4Ok)
Run 'wsk --help' for usage.
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.99727648],
       [ 2.17852389]]), 'worker-node2': array([[19.14152312],
       [ 0.60769238]]), 'worker-node3': array([[19.56363587],
       [ 1.36829164]]), 'worker-node4': array([[23.95315463],
       [ 3.28634058]])}
Test complete.
Process with id: 4 finished in 12.03912282499914 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.5
+ echo master-automation,6.5
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node1,3.1
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node2,6.2
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.4
+ echo worker-node4,9.4
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ awk -F, '{print $2}'
++ grep 10.140.0.33 ip_address
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.412/259.495/259.623/0.070 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.412/259.495/259.623/0.070 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.328/109.405/109.490/0.052 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.328/109.405/109.490/0.052 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.953/199.018/199.058/0.037 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 198.953/199.018/199.058/0.037 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ tail -n 2
++ tail -1
++ ping -c 5 -i 0.2 -q 10.152.0.33
+ metric_rtt='rtt min/avg/max/mdev = 278.428/278.502/278.535/0.040 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 278.428/278.502/278.535/0.040 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 823ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.034/0.073/0.107/0.023 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 823ms,rtt min/avg/max/mdev = 0.034/0.073/0.107/0.023 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
error: Unable to create action 'hellopy5': resource already exists (code 0emO6LwvmIqFn99qagCClbhSjFfRVWhF)
Run 'wsk --help' for usage.
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[25.39131502],
       [ 2.72826006]]), 'worker-node2': array([[19.58377718],
       [ 0.98141927]]), 'worker-node3': array([[19.58780675],
       [ 1.02775506]]), 'worker-node4': array([[23.88010833],
       [ 3.1096487 ]])}
Test complete.
Process with id: 5 finished in 6.398928770999191 seconds
Total execution time: 175.48291215600148 seconds
error: Unable to delete action 'hellopy17': The requested resource does not exist. (code Lo96eaVsjR5QtXCHZdzyy83yZEtRsdzq)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy13': The requested resource does not exist. (code 5R5779nTnyfvwUlpiCVhIxSI3AqkiTxB)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy21': The requested resource does not exist. (code qh0jlnBQLW056NzZgLJFzbTENAobRg9B)
Run 'wsk --help' for usage.
Process Process-18:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy10': The requested resource does not exist. (code cfVHWqm6LGlZiCYv79t7RxFUtRT0mhED)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy7': The requested resource does not exist. (code 356P8hQIZWQUSudYzekHWlqhdafNvgeb)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy6': The requested resource does not exist. (code ypYlOYThggVgI5Eg8z4VF3Nj3viLWp9C)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy11': The requested resource does not exist. (code 1X1fSNz55qzULHQPu39O4jKzflKylTG8)
Run 'wsk --help' for usage.
ok: deleted action hellopy5
error: Unable to delete action 'hellopy23': The requested resource does not exist. (code GqGtVS9FjwMi3mbwFSte3UIMjiYPkAN6)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy20': The requested resource does not exist. (code 7iHO1Zoaz7tuQ484nd3eJyfUhbBD30wK)
Run 'wsk --help' for usage.
Process Process-6:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-21:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-14:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-7:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-8:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-12:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-11:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-24:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-22:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy31': The requested resource does not exist. (code X8wykYrQwYzwg7V5UTS5QXtxVdVE9UJ3)
Run 'wsk --help' for usage.
Process Process-32:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy26': The requested resource does not exist. (code LpcssECPUmJhkqqX5deaZVpx2fY3oakF)
Run 'wsk --help' for usage.
Process Process-27:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy35': The requested resource does not exist. (code mRhA4O1qU7r5lQTsvAPoaBtyanEeL1iq)
Run 'wsk --help' for usage.
Process Process-36:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy27': The requested resource does not exist. (code e1NguflspYXbKPc40rbNvJAivveiu1qW)
Run 'wsk --help' for usage.
Process Process-28:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy2
Process Process-3:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy36': The requested resource does not exist. (code JcQdjHoSKSSmupouy2o3EOvJqemJrRXI)
Run 'wsk --help' for usage.
Process Process-37:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy39': The requested resource does not exist. (code kTJKtYkmEorX50ctVo5f8Av74mOgfpqz)
Run 'wsk --help' for usage.
Process Process-40:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy40': The requested resource does not exist. (code 2dxHbRzAhWufn1tTR5uskzl81LZNNXED)
Run 'wsk --help' for usage.
Process Process-41:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy41': The requested resource does not exist. (code nc0TEPHsnDFKw8dugykSAmgaBMieptU3)
Run 'wsk --help' for usage.
Process Process-42:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy46': The requested resource does not exist. (code ovIHluNOo97ydSeR3AN9VRKc0mtpDASH)
Run 'wsk --help' for usage.
Process Process-47:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy49': The requested resource does not exist. (code f8bnHRcVrV1OOoZeMueq9bLiuJxqrJ7T)
Run 'wsk --help' for usage.
Process Process-50:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy15': The requested resource does not exist. (code TLwVwsVftBydggHWlsAySCjPm2xaqSjH)
Run 'wsk --help' for usage.
Process Process-16:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy1
error: Unable to delete action 'hellopy12': The requested resource does not exist. (code kvkr2nNGHdhSozZ0rxTQplrodmSGLBfq)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy9': The requested resource does not exist. (code BdmsyvLqUgTSCHntWlARbjMDunGz0J4i)
Run 'wsk --help' for usage.
Process Process-13:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy14': The requested resource does not exist. (code CDLkm2ziA61y1rgm9Ri5qKhhvuzYaUDK)
Run 'wsk --help' for usage.
Process Process-2:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-10:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-15:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy8': The requested resource does not exist. (code gNfkUTXXEWOIYqmrp21OYgQYd6VmdiFQ)
Run 'wsk --help' for usage.
Process Process-9:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy3
error: Unable to delete action 'hellopy18': The requested resource does not exist. (code d3jzo9xAWg1hS9Bxi9ZcEY3cury2CQfO)
Run 'wsk --help' for usage.
Process Process-4:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy4
Process Process-19:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-5:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy19': The requested resource does not exist. (code fxIBi1sbSyjtRWqM996P7YAuXqdYd4dI)
Run 'wsk --help' for usage.
Process Process-20:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy24': The requested resource does not exist. (code Jpsa3fGFA975j3kPU38GIv5UgMyMDPHd)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy22': The requested resource does not exist. (code d9LSp85DjDFknIEZdsMggV7H9vIGfN01)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy16': The requested resource does not exist. (code 1Sj7fkdFMkCmCRGW53W96kQ67FcfRJfy)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy34': The requested resource does not exist. (code gVF30vnwf6LIZEM9ySgJ3CDdiLF62fUT)
Run 'wsk --help' for usage.
Process Process-35:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-25:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-17:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-23:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy30': The requested resource does not exist. (code GvnF5scBlo9E82pIdf4L4DULdKbeK77q)
Run 'wsk --help' for usage.
Process Process-31:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy45': The requested resource does not exist. (code SH7YQP3WTUXVqQbZGTzZAQgA8RgmxEmd)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy38': The requested resource does not exist. (code SvXJU3DBqoQUJA2tI1JyVcjPy5EEWrbi)
Run 'wsk --help' for usage.
Process Process-46:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy47': The requested resource does not exist. (code 58upBZEOmTXVIPYoXaFQDEj8PwTIsWWT)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy25': The requested resource does not exist. (code n4z5OX2mqUc2aHx7TAGfN3SrfgnSrncK)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy28': The requested resource does not exist. (code pw14LAYOUbPOJypjO9Y92mM8rcknH75m)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy44': The requested resource does not exist. (code syoE1yXG4E1ezoUOX6UDcTKjOLI0bG90)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy32': The requested resource does not exist. (code PdXc9RK2DDRCcYI4QcIy3KKTALhETQZh)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy29': The requested resource does not exist. (code JPqZIW7DXHxekFBfFwSDU1CRhZcBAjgM)
Run 'wsk --help' for usage.
Process Process-33:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-26:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-30:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-39:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-48:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy33': The requested resource does not exist. (code Y5CyOnxEL0YNJr44kNEDqerCkPCTZ7FJ)
Run 'wsk --help' for usage.
Process Process-29:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy48': The requested resource does not exist. (code BoBWy9Lt9X2NCodZDVs3WCXlnqxmf4xE)
Run 'wsk --help' for usage.
Process Process-45:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy43': The requested resource does not exist. (code rObuDfvloZxOedzikAPfhVxdqRYrAPlK)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy42': The requested resource does not exist. (code SMIoKCaeCQhV3Ww0LTIHxjgbV3aFhEfQ)
Run 'wsk --help' for usage.
Process Process-34:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy37': The requested resource does not exist. (code olTA7Xck48BHvLcyuRURMfEPHl5IqqaX)
Run 'wsk --help' for usage.
Process Process-49:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy0
Process Process-44:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-38:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-43:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=2.9
+ echo master-automation,2.9
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.5
+ echo worker-node2,6.5
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node3,0.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node4,6.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.603/259.643/259.669/0.022 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 259.603/259.643/259.669/0.022 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.579/109.649/109.706/0.041 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.579/109.649/109.706/0.041 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.846/198.940/199.048/0.074 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.846/198.940/199.048/0.074 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 278.421/278.482/278.552/0.048 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 278.421/278.482/278.552/0.048 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 814ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.045/0.072/0.092/0.015 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 814ms,rtt min/avg/max/mdev = 0.045/0.072/0.092/0.015 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy1
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[24.93337012],
       [ 2.064592  ]]), 'worker-node2': array([[19.14228097],
       [ 0.64830322]]), 'worker-node3': array([[18.87213081],
       [ 0.30287029]]), 'worker-node4': array([[22.85425505],
       [ 2.12005611]])}
Test complete.
Process with id: 1 finished in 18.11062965199926 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=17.1
+ echo master-automation,17.1
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ ipa=10.128.0.35
++ awk -F, '{print $2}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ name=worker-node2
++ awk -F, '{print $3}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node3,6.2
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node4,6.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.541/259.675/259.758/0.079 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 259.541/259.675/259.758/0.079 ms, pipe 2'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.128.0.35 ip_address
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ tail -n 2
++ tail -1
++ ping -c 5 -i 0.2 -q 10.128.0.35
+ metric_rtt='rtt min/avg/max/mdev = 109.574/109.638/109.717/0.045 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 109.574/109.638/109.717/0.045 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ head -1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.158.0.33
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 198.896/198.996/199.078/0.059 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.896/198.996/199.078/0.059 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.814/278.878/278.991/0.069 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 278.814/278.878/278.991/0.069 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 819ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.046/0.063/0.086/0.013 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 819ms,rtt min/avg/max/mdev = 0.046/0.063/0.086/0.013 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ awk -F, '{print $2}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy2
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.03345952],
       [ 1.52767721]]), 'worker-node2': array([[17.7233782 ],
       [-0.76404788]]), 'worker-node3': array([[18.33079122],
       [ 0.64172447]]), 'worker-node4': array([[22.72539649],
       [ 2.42257413]])}
Test complete.
Process with id: 2 finished in 13.244898478000323 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=43.8
+ echo master-automation,43.8
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node2,3.2
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node4,3.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.424/259.476/259.593/0.061 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 259.424/259.476/259.593/0.061 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.504/109.571/109.640/0.044 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.504/109.571/109.640/0.044 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.851/198.938/199.046/0.066 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 198.851/198.938/199.046/0.066 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.820/278.914/279.096/0.097 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 278.820/278.914/279.096/0.097 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 818ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.056/0.068/0.097/0.015 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 818ms,rtt min/avg/max/mdev = 0.056/0.068/0.097/0.015 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy3
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.07452296],
       [ 1.74609834]]), 'worker-node2': array([[18.19617976],
       [-0.04926257]]), 'worker-node3': array([[18.48274914],
       [ 0.50797265]]), 'worker-node4': array([[22.4168129 ],
       [ 1.79371149]])}
Test complete.
Process with id: 3 finished in 18.134903756001222 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.1
+ echo master-automation,9.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node1,3.2
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=2.9
+ echo worker-node2,2.9
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=11.8
+ echo worker-node4,11.8
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.548/259.609/259.687/0.049 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 259.548/259.609/259.687/0.049 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.550/109.632/109.747/0.063 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.550/109.632/109.747/0.063 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 198.887/198.912/198.993/0.040 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.887/198.912/198.993/0.040 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.839/278.935/279.042/0.087 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 278.839/278.935/279.042/0.087 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 815ms'
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.035/0.064/0.092/0.018 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 815ms,rtt min/avg/max/mdev = 0.035/0.064/0.092/0.018 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy4
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.05408824],
       [ 1.9356942 ]]), 'worker-node2': array([[18.22613396],
       [ 0.02833419]]), 'worker-node3': array([[18.52652463],
       [ 0.55624582]]), 'worker-node4': array([[23.45655073],
       [ 3.36173972]])}
Test complete.
Process with id: 4 finished in 13.599738567998429 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=11.8
+ echo master-automation,11.8
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node3,3.2
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.4
+ echo worker-node4,9.4
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 259.548/259.614/259.796/0.093 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 259.548/259.614/259.796/0.093 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.528/109.597/109.683/0.058 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.528/109.597/109.683/0.058 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.857/198.922/199.019/0.055 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 198.857/198.922/199.019/0.055 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.818/278.862/278.988/0.064 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 278.818/278.862/278.988/0.064 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 814ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.045/0.078/0.100/0.018 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 814ms,rtt min/avg/max/mdev = 0.045/0.078/0.100/0.018 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy5
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.81246767],
       [ 2.28855396]]), 'worker-node2': array([[18.40959905],
       [-0.35017132]]), 'worker-node3': array([[18.48744343],
       [ 0.29526455]]), 'worker-node4': array([[23.055094  ],
       [ 2.75966505]])}
Test complete.
Process with id: 5 finished in 12.592638550000629 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo master-automation,3.2
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node3,0.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node4,3.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.573/259.592/259.615/0.015 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 259.573/259.592/259.615/0.015 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 109.495/109.607/109.836/0.119 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.495/109.607/109.836/0.119 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.909/198.967/199.047/0.051 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 198.909/198.967/199.047/0.051 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.797/278.857/278.890/0.032 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 278.797/278.857/278.890/0.032 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 818ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.066/0.071/0.076/0.003 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 818ms,rtt min/avg/max/mdev = 0.066/0.071/0.076/0.003 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ ipa=10.128.0.35
++ awk -F, '{print $2}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy6
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[24.37665112],
       [ 1.93298411]]), 'worker-node2': array([[18.41166688],
       [ 0.02086927]]), 'worker-node3': array([[18.260969  ],
       [-0.02723668]]), 'worker-node4': array([[22.09661138],
       [ 1.45995099]])}
Test complete.
Process with id: 6 finished in 20.734737749000487 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo master-automation,3.2
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node1,6.2
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node2,6.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node4,6.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ awk -F, '{print $2}'
++ grep 10.140.0.33 ip_address
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.538/259.614/259.722/0.064 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 259.538/259.614/259.722/0.064 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.513/109.582/109.783/0.101 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.513/109.582/109.783/0.101 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.873/198.912/198.998/0.045 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 198.873/198.912/198.998/0.045 ms'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.152.0.33 ip_address
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.822/278.860/278.907/0.029 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 278.822/278.860/278.907/0.029 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 818ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.050/0.075/0.109/0.021 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 818ms,rtt min/avg/max/mdev = 0.050/0.075/0.109/0.021 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy7
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.11161599],
       [ 2.28872911]]), 'worker-node2': array([[18.75954257],
       [ 0.83211556]]), 'worker-node3': array([[19.10574242],
       [ 1.03092235]]), 'worker-node4': array([[23.28010848],
       [ 2.60416821]])}
Test complete.
Process with id: 7 finished in 17.88777359099913 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=11.8
+ echo master-automation,11.8
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node2,6.2
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=23.3
+ echo worker-node4,23.3
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 807ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.573/259.620/259.688/0.042 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 807ms,rtt min/avg/max/mdev = 259.573/259.620/259.688/0.042 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ tail -1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.128.0.35
+ metric_rtt='rtt min/avg/max/mdev = 109.536/109.548/109.588/0.019 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.536/109.548/109.588/0.019 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.913/198.962/199.044/0.045 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.913/198.962/199.044/0.045 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ tail -n 2
++ tail -1
++ ping -c 5 -i 0.2 -q 10.152.0.33
+ metric_rtt='rtt min/avg/max/mdev = 278.840/278.917/279.044/0.071 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 278.840/278.917/279.044/0.071 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 813ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.073/0.095/0.116/0.015 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 813ms,rtt min/avg/max/mdev = 0.073/0.095/0.116/0.015 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy8
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.43319519],
       [ 1.79958263]]), 'worker-node2': array([[18.74663319],
       [ 0.47828028]]), 'worker-node3': array([[18.96613829],
       [ 0.79421649]]), 'worker-node4': array([[25.10544072],
       [ 5.52644529]])}
Test complete.
Process with id: 8 finished in 13.222378786000263 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.7
+ echo master-automation,5.7
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node3,3.2
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node4,3.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ awk -F, '{print $2}'
++ grep 10.140.0.33 ip_address
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.590/259.619/259.654/0.021 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 259.590/259.619/259.654/0.021 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 109.515/109.559/109.664/0.053 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.515/109.559/109.664/0.053 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.891/198.942/199.002/0.046 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 198.891/198.942/199.002/0.046 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 809ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.846/278.894/278.929/0.032 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 809ms,rtt min/avg/max/mdev = 278.846/278.894/278.929/0.032 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 814ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.067/0.087/0.131/0.023 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 814ms,rtt min/avg/max/mdev = 0.067/0.087/0.131/0.023 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy9
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[26.48088269],
       [ 3.53988199]]), 'worker-node2': array([[19.73692571],
       [ 0.28138951]]), 'worker-node3': array([[19.40653663],
       [ 0.5525304 ]]), 'worker-node4': array([[22.89238171],
       [ 1.68772584]])}
Test complete.
Process with id: 9 finished in 19.92465579599957 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.1
+ echo master-automation,9.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node1,3.1
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.1
+ echo worker-node2,9.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=21.9
+ echo worker-node3,21.9
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node4,6.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.539/259.593/259.634/0.035 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 259.539/259.593/259.634/0.035 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 109.588/109.637/109.718/0.049 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.588/109.637/109.718/0.049 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.886/198.934/198.960/0.026 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.886/198.934/198.960/0.026 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.774/278.810/278.838/0.023 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 278.774/278.810/278.838/0.023 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 815ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.037/0.062/0.072/0.012 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 815ms,rtt min/avg/max/mdev = 0.037/0.062/0.072/0.012 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy10
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.243748  ],
       [ 1.78531499]]), 'worker-node2': array([[18.98509188],
       [ 1.01342626]]), 'worker-node3': array([[21.47277152],
       [ 4.49302517]]), 'worker-node4': array([[25.80816254],
       [ 4.63927627]])}
Test complete.
Process with id: 10 finished in 18.851416334000533 seconds
Total execution time: 411.89942951599915 seconds
error: Unable to delete action 'hellopy31': The requested resource does not exist. (code YWSzKDNjw7jHUX6NaBCP0Rl8CRPmMvPk)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy21': The requested resource does not exist. (code Pa9e8MR79l71SH4G9Aa9C4SuNpDqQAj5)
Run 'wsk --help' for usage.
Process Process-32:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy17': The requested resource does not exist. (code onmIJ9uwqBpTz5u2e8k5Dc5SaM2xYWRd)
Run 'wsk --help' for usage.
Process Process-22:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy16': The requested resource does not exist. (code zKFQca5UCt0QvCly8vgAF1M145gwRktg)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy20': The requested resource does not exist. (code bb5SW4a4oq0IpKYzhsEuq80cYABpSGFF)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy12': The requested resource does not exist. (code sZjNLRcCFtxwsFco9Yh5AoS4tkk6M4VQ)
Run 'wsk --help' for usage.
Process Process-17:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-18:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-21:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy22': The requested resource does not exist. (code iQeam7o0FmpGuIhLe1bNyL1Q1Rop1M1z)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy18': The requested resource does not exist. (code nxQalrGSynQ9WQjP7ZzseYFAezhmc3Pc)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy14': The requested resource does not exist. (code dCibVZc4tGf9gprxFfkct3Iv3jjJ0lWf)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy15': The requested resource does not exist. (code uFNfaj50MyJ8XW5TCnLjuJQUGIeygX3X)
Run 'wsk --help' for usage.
Process Process-13:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy19': The requested resource does not exist. (code xdghsSHTx3rlHpvt8lEDgGEZDFotImv1)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy0': The requested resource does not exist. (code gMmg6SuXBbOLk8cOrEp6elhgsoeyJ5SQ)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy24': The requested resource does not exist. (code w50d28WWP2LywX7mFozQ9HybHtG1Ii5t)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy32': The requested resource does not exist. (code RZyiip1BpHcH7y80WpKjxk4VTRO5sq7l)
Run 'wsk --help' for usage.
Process Process-25:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy26': The requested resource does not exist. (code YkQc5GN7QxztWFWeuFbAloUsMcp3Tk0x)
Run 'wsk --help' for usage.
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-19:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-20:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-27:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-23:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-15:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-33:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-16:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy28': The requested resource does not exist. (code n9xM82tBg1YnoDg0pF7wEEGteWRojIwD)
Run 'wsk --help' for usage.
Process Process-29:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy34': The requested resource does not exist. (code Ad2DZojglrao33ROvIrlPBjwHe6OqdlR)
Run 'wsk --help' for usage.
Process Process-35:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy2
ok: deleted action hellopy7
Process Process-3:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-8:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy3
Process Process-4:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy48': The requested resource does not exist. (code YpK6fmhwnQ912fOzzDDaphhaPc8Ugguq)
Run 'wsk --help' for usage.
Process Process-49:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy35': The requested resource does not exist. (code 42V7kxT0EhxDCJFPsDyXjnatVOatE8u6)
Run 'wsk --help' for usage.
Process Process-36:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy37': The requested resource does not exist. (code FkZrrjA8nScCAHMkHWZk43XZnMVoQQZ7)
Run 'wsk --help' for usage.
Process Process-38:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy44': The requested resource does not exist. (code 5WXXOHIKiEdOPm3XihMMABsdQrnU6kHk)
Run 'wsk --help' for usage.
Process Process-45:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy39': The requested resource does not exist. (code KbTWzi1goumQ4AgwVOQSEls6kj8lXVqI)
Run 'wsk --help' for usage.
Process Process-40:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy40': The requested resource does not exist. (code Ck03jy693s4i9ZoDMDBvoPcN4ZWfQZP6)
Run 'wsk --help' for usage.
Process Process-41:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy46': The requested resource does not exist. (code uKFAnRGsozQiR1cBrzSGtn87keXLCoL2)
Run 'wsk --help' for usage.
Process Process-47:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy36': The requested resource does not exist. (code i0bQLltBWRMOMQMZidBvtLkgIkHsMq7h)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy27': The requested resource does not exist. (code t8dce5m35N3B4Le7SKcNKGZpztW42INi)
Run 'wsk --help' for usage.
Process Process-37:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-28:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy29': The requested resource does not exist. (code 6ogrN6yozRlqlX329C1tnvYP2kc0vJ6G)
Run 'wsk --help' for usage.
Process Process-30:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy38': The requested resource does not exist. (code rRLVNFQTJcutszwGtfqim93wMCz8K5OU)
error: Unable to delete action 'hellopy23': The requested resource does not exist. (code g9lAUMI4ifkmsGH7tTarnvQ0ePw8Vd3z)
Run 'wsk --help' for usage.
Run 'wsk --help' for usage.
Process Process-24:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-39:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy33': The requested resource does not exist. (code ANLwD4CDTfqu6xUPFTjYDYwCJ8ieijUZ)
Run 'wsk --help' for usage.
Process Process-34:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy49': The requested resource does not exist. (code B6UCeJPRTkvGiGFYhsz3cBJyyPeUHs1r)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy30': The requested resource does not exist. (code LOM2ofqR5WUzYuLIFH5eNOyI3thRNb9B)
Run 'wsk --help' for usage.
Process Process-50:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-31:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy42': The requested resource does not exist. (code XDbpw8r6BgsgFRrIfS7DIokeXqFLuexp)
Run 'wsk --help' for usage.
Process Process-43:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy13': The requested resource does not exist. (code 4nKVZAXQbZXzoQE5HM178QodtyxkFd9J)
Run 'wsk --help' for usage.
Process Process-14:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy25': The requested resource does not exist. (code AS2UFDuHIukDDhSzdxHCvGuWrGckom7k)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy41': The requested resource does not exist. (code tsG9i3WgiiLfNAIBTr0032PWNYP0MJjV)
Run 'wsk --help' for usage.
Process Process-26:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy45': The requested resource does not exist. (code zmEY8nTrjj0RnobQuBKDUOQjEWXAocxg)
Run 'wsk --help' for usage.
Process Process-42:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-46:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy11': The requested resource does not exist. (code JQojOvnkhT4VWmAexVhESdP8vtnKb9K8)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy47': The requested resource does not exist. (code JtgZTjPPm8CYjvlpkb0OyA92n0vUDS77)
Run 'wsk --help' for usage.
Process Process-48:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-12:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy43': The requested resource does not exist. (code pmFmy369Qecn8qSx4CF15pe0EmF9RObp)
Run 'wsk --help' for usage.
Process Process-44:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy1
ok: deleted action hellopy9
ok: deleted action hellopy10
Process Process-2:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-11:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy8
Process Process-10:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy6
ok: deleted action hellopy5
Process Process-9:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-6:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy4
Process Process-7:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-5:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.4
+ echo master-automation,9.4
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node3,3.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node4,6.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 810ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.503/259.586/259.650/0.050 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 810ms,rtt min/avg/max/mdev = 259.503/259.586/259.650/0.050 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.941/109.983/110.079/0.054 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.941/109.983/110.079/0.054 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.922/198.957/199.004/0.029 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.922/198.957/199.004/0.029 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 807ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.806/278.858/279.012/0.077 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 807ms,rtt min/avg/max/mdev = 278.806/278.858/279.012/0.077 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 813ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.049/0.069/0.081/0.012 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 813ms,rtt min/avg/max/mdev = 0.049/0.069/0.081/0.012 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy1
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[26.49861544],
       [ 2.85071524]]), 'worker-node2': array([[19.5014328 ],
       [-0.18132669]]), 'worker-node3': array([[19.08705071],
       [ 0.23447634]]), 'worker-node4': array([[22.96605622],
       [ 2.06871567]])}
Test complete.
Process with id: 1 finished in 19.925502961999882 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.9
+ echo master-automation,5.9
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node2,3.0
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node3,6.2
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.9
+ echo worker-node4,5.9
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.571/259.627/259.667/0.038 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 259.571/259.627/259.667/0.038 ms, pipe 2'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.128.0.35 ip_address
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.871/109.926/109.985/0.040 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.871/109.926/109.985/0.040 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.877/198.949/199.079/0.068 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 198.877/198.949/199.079/0.068 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.824/278.855/278.941/0.043 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 278.824/278.855/278.941/0.043 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 814ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.057/0.079/0.097/0.015 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 814ms,rtt min/avg/max/mdev = 0.057/0.079/0.097/0.015 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ awk -F, '{print $3}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy2
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.06870326],
       [ 1.47817959]]), 'worker-node2': array([[18.08341054],
       [-0.26114914]]), 'worker-node3': array([[18.70450255],
       [ 0.93481114]]), 'worker-node4': array([[23.00374372],
       [ 2.53668152]])}
Test complete.
Process with id: 2 finished in 13.94141646800017 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo master-automation,3.0
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node3,0.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.3
+ echo worker-node4,3.3
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.603/259.682/259.773/0.056 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 259.603/259.682/259.773/0.056 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.899/109.950/110.032/0.045 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.899/109.950/110.032/0.045 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 198.879/198.952/199.077/0.068 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.879/198.952/199.077/0.068 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ head -1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.152.0.33
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.364/278.479/278.615/0.081 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 278.364/278.479/278.615/0.081 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 813ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.049/0.074/0.106/0.019 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 813ms,rtt min/avg/max/mdev = 0.049/0.074/0.106/0.019 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ awk -F, '{print $2}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy3
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[24.269245  ],
       [ 1.79000978]]), 'worker-node2': array([[18.31753331],
       [-0.05798546]]), 'worker-node3': array([[18.18216126],
       [-0.0686423 ]]), 'worker-node4': array([[22.03536416],
       [ 1.45558054]])}
Test complete.
Process with id: 3 finished in 13.548910080000496 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo master-automation,3.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.1
+ echo worker-node3,9.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node4,6.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.533/259.579/259.642/0.038 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 259.533/259.579/259.642/0.038 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.916/109.957/109.997/0.030 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 109.916/109.957/109.997/0.030 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.922/198.998/199.090/0.059 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 198.922/198.998/199.090/0.059 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.306/278.404/278.460/0.053 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 278.306/278.404/278.460/0.053 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 817ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.039/0.066/0.116/0.028 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 817ms,rtt min/avg/max/mdev = 0.039/0.066/0.116/0.028 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy4
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[23.35764689],
       [ 1.18239872]]), 'worker-node2': array([[17.62077489],
       [-0.35183524]]), 'worker-node3': array([[18.77267195],
       [ 1.45276375]]), 'worker-node4': array([[23.25120491],
       [ 2.92625091]])}
Test complete.
Process with id: 4 finished in 16.938588237999284 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.9
+ echo master-automation,5.9
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node1,3.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ ipa=10.128.0.35
++ awk -F, '{print $2}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node3,3.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.9
+ echo worker-node4,5.9
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.583/259.614/259.673/0.030 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.583/259.614/259.673/0.030 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 109.920/109.963/110.008/0.036 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.920/109.963/110.008/0.036 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.901/198.960/199.017/0.039 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 198.901/198.960/199.017/0.039 ms'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.152.0.33 ip_address
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.349/278.406/278.460/0.037 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 278.349/278.406/278.460/0.037 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 823ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.071/0.081/0.089/0.006 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 823ms,rtt min/avg/max/mdev = 0.071/0.081/0.089/0.006 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy5
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.90105733],
       [ 2.57609094]]), 'worker-node2': array([[18.94074004],
       [ 0.39232781]]), 'worker-node3': array([[19.02056365],
       [ 0.69345754]]), 'worker-node4': array([[23.05264131],
       [ 2.32814548]])}
Test complete.
Process with id: 5 finished in 11.882928417000585 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.4
+ echo master-automation,9.4
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=17.2
+ echo worker-node1,17.2
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=8.8
+ echo worker-node2,8.8
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=8.8
+ echo worker-node4,8.8
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.558/259.599/259.668/0.043 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 259.558/259.599/259.668/0.043 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.909/109.984/110.181/0.100 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.909/109.984/110.181/0.100 ms'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.158.0.33 ip_address
+ dest_name=worker-node3
++ head -1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.158.0.33
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.885/198.927/198.999/0.039 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.885/198.927/198.999/0.039 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.346/278.390/278.433/0.029 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 278.346/278.390/278.433/0.029 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 815ms'
++ tail -1
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.057/0.081/0.104/0.016 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 815ms,rtt min/avg/max/mdev = 0.057/0.081/0.104/0.016 ms'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ ipa=10.128.0.35
++ awk -F, '{print $2}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ name=worker-node2
++ awk -F, '{print $3}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy6
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[26.20682773],
       [ 4.72353717]]), 'worker-node2': array([[21.08980088],
       [ 2.69719923]]), 'worker-node3': array([[21.00750112],
       [ 1.99306093]]), 'worker-node4': array([[24.89835819],
       [ 3.47146328]])}
Test complete.
Process with id: 6 finished in 18.07668840199949 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=19.4
+ echo master-automation,19.4
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node1,6.2
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.5
+ echo worker-node2,6.5
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.5
+ echo worker-node4,6.5
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ awk -F, '{print $1}'
++ grep -v 10.156.0.38 ip_address
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 259.577/259.648/259.812/0.084 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.577/259.648/259.812/0.084 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 109.929/109.974/110.081/0.056 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.929/109.974/110.081/0.056 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ tail -n 2
++ head -1
++ ping -c 5 -i 0.2 -q 10.158.0.33
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 198.880/199.065/199.408/0.183 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.880/199.065/199.408/0.183 ms'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.152.0.33 ip_address
+ dest_name=worker-node4
++ tail -n 2
++ head -1
++ ping -c 5 -i 0.2 -q 10.152.0.33
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.371/278.465/278.524/0.054 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 278.371/278.465/278.524/0.054 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 814ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.071/0.086/0.106/0.011 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 814ms,rtt min/avg/max/mdev = 0.071/0.086/0.106/0.011 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy7
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[26.31060092],
       [ 3.28977914]]), 'worker-node2': array([[20.32731616],
       [ 1.30359563]]), 'worker-node3': array([[20.09217473],
       [ 1.15093983]]), 'worker-node4': array([[23.84617488],
       [ 2.60845336]])}
Test complete.
Process with id: 7 finished in 13.673947090999718 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.1
+ echo master-automation,9.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.3
+ echo worker-node1,3.3
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node2,3.2
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node3,6.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node4,6.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 808ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.537/259.584/259.616/0.029 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 808ms,rtt min/avg/max/mdev = 259.537/259.584/259.616/0.029 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.852/109.912/109.987/0.045 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.852/109.912/109.987/0.045 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.884/198.923/198.977/0.032 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.884/198.923/198.977/0.032 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.362/278.417/278.453/0.031 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 278.362/278.417/278.453/0.031 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 820ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.055/0.077/0.109/0.019 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 820ms,rtt min/avg/max/mdev = 0.055/0.077/0.109/0.019 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy8
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[25.10482749],
       [ 2.32102504]]), 'worker-node2': array([[18.95647778],
       [ 0.21140155]]), 'worker-node3': array([[19.3175375 ],
       [ 1.12424098]]), 'worker-node4': array([[23.39242846],
       [ 2.61708971]])}
Test complete.
Process with id: 8 finished in 17.507127083999876 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=12.1
+ echo master-automation,12.1
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node2,3.2
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node3,3.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=8.8
+ echo worker-node4,8.8
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.575/259.590/259.614/0.013 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 259.575/259.590/259.614/0.013 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.912/109.947/109.966/0.018 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.912/109.947/109.966/0.018 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.923/199.058/199.272/0.119 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.923/199.058/199.272/0.119 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.381/278.448/278.489/0.039 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 278.381/278.448/278.489/0.039 ms, pipe 2'
+ read -r dest_ip
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 824ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.073/0.088/0.120/0.017 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 824ms,rtt min/avg/max/mdev = 0.073/0.088/0.120/0.017 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy9
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.49406886],
       [ 1.79362177]]), 'worker-node2': array([[18.4450215 ],
       [-0.06636509]]), 'worker-node3': array([[18.5968363 ],
       [ 0.44813458]]), 'worker-node4': array([[23.08122974],
       [ 2.73662851]])}
Test complete.
Process with id: 9 finished in 18.43580274499982 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo master-automation,3.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.3
+ echo worker-node1,3.3
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=2.9
+ echo worker-node3,2.9
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.1
+ echo worker-node4,9.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 259.558/259.573/259.592/0.010 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 259.558/259.573/259.592/0.010 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 109.891/110.010/110.162/0.087 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.891/110.010/110.162/0.087 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.875/198.966/199.032/0.053 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.875/198.966/199.032/0.053 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.341/278.389/278.516/0.064 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 278.341/278.389/278.516/0.064 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 820ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.046/0.080/0.131/0.029 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 820ms,rtt min/avg/max/mdev = 0.046/0.080/0.131/0.029 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy10
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.76329032],
       [ 2.50509913]]), 'worker-node2': array([[18.48569702],
       [-0.19287445]]), 'worker-node3': array([[18.55351566],
       [ 0.33853063]]), 'worker-node4': array([[23.04943221],
       [ 2.72120972]])}
Test complete.
Process with id: 10 finished in 12.208896681000624 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo master-automation,3.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node1,3.2
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node2,3.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node4,3.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.568/259.631/259.716/0.060 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.568/259.631/259.716/0.060 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.906/109.960/110.065/0.055 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.906/109.960/110.065/0.055 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ tail -n 2
++ tail -1
++ ping -c 5 -i 0.2 -q 10.158.0.33
+ metric_rtt='rtt min/avg/max/mdev = 198.911/198.984/199.146/0.083 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.911/198.984/199.146/0.083 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.411/278.488/278.561/0.058 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 278.411/278.488/278.561/0.058 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 817ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.069/0.075/0.086/0.006 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 817ms,rtt min/avg/max/mdev = 0.069/0.075/0.086/0.006 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy11
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.73216252],
       [ 2.4815035 ]]), 'worker-node2': array([[18.80672805],
       [ 0.33206528]]), 'worker-node3': array([[18.94187147],
       [ 0.68806592]]), 'worker-node4': array([[22.68916949],
       [ 1.83385397]])}
Test complete.
Process with id: 11 finished in 16.438765676999537 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=14.3
+ echo master-automation,14.3
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node1,6.2
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=12.1
+ echo worker-node3,12.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=14.7
+ echo worker-node4,14.7
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ awk -F, '{print $2}'
++ grep 10.140.0.33 ip_address
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.615/259.680/259.826/0.075 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 259.615/259.680/259.826/0.075 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ tail -n 2
++ tail -1
++ ping -c 5 -i 0.2 -q 10.128.0.35
+ metric_rtt='rtt min/avg/max/mdev = 109.571/109.598/109.653/0.032 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 109.571/109.598/109.653/0.032 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 198.901/198.960/199.007/0.035 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 198.901/198.960/199.007/0.035 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.529/278.594/278.624/0.037 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 278.529/278.594/278.624/0.037 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 818ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.045/0.061/0.081/0.012 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 818ms,rtt min/avg/max/mdev = 0.045/0.061/0.081/0.012 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ awk -F, '{print $2}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ name=worker-node2
++ awk -F, '{print $3}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy12
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.55961829],
       [ 2.46633723]]), 'worker-node2': array([[18.34867297],
       [-0.19783068]]), 'worker-node3': array([[19.54914563],
       [ 2.00087726]]), 'worker-node4': array([[24.85152383],
       [ 4.72231861]])}
Test complete.
Process with id: 12 finished in 17.664617448999707 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=8.8
+ echo master-automation,8.8
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node3,6.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.1
+ echo worker-node4,9.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.530/259.562/259.600/0.026 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 259.530/259.562/259.600/0.026 ms, pipe 2'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.128.0.35 ip_address
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 109.561/109.606/109.732/0.064 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.561/109.606/109.732/0.064 ms'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.158.0.33 ip_address
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 198.909/198.945/199.009/0.040 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.909/198.945/199.009/0.040 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.410/278.520/278.640/0.088 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 278.410/278.520/278.640/0.088 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 815ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.035/0.073/0.101/0.022 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 815ms,rtt min/avg/max/mdev = 0.035/0.073/0.101/0.022 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy13
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[26.04150425],
       [ 3.02863229]]), 'worker-node2': array([[ 1.93195643e+01],
       [-7.20737932e-03]]), 'worker-node3': array([[19.42009238],
       [ 0.93052665]]), 'worker-node4': array([[23.72341443],
       [ 3.01186383]])}
Test complete.
Process with id: 13 finished in 14.198480250999637 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=8.8
+ echo master-automation,8.8
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node1,3.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.9
+ echo worker-node2,5.9
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node3,6.2
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node4,3.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ awk -F, '{print $1}'
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $2}'
++ grep 10.140.0.33 ip_address
+ dest_name=worker-node1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.536/259.590/259.652/0.042 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.536/259.590/259.652/0.042 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.507/109.548/109.615/0.044 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.507/109.548/109.615/0.044 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.862/198.923/199.020/0.061 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.862/198.923/199.020/0.061 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ head -1
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 807ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.268/278.344/278.410/0.063 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 807ms,rtt min/avg/max/mdev = 278.268/278.344/278.410/0.063 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 818ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.062/0.079/0.111/0.016 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 818ms,rtt min/avg/max/mdev = 0.062/0.079/0.111/0.016 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy14
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[25.16188413],
       [ 2.55542832]]), 'worker-node2': array([[19.37228531],
       [ 0.84191086]]), 'worker-node3': array([[19.782165  ],
       [ 1.51484058]]), 'worker-node4': array([[23.42723887],
       [ 2.28321066]])}
Test complete.
Process with id: 14 finished in 17.983249356999295 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=12.9
+ echo master-automation,12.9
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node1,3.1
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node3,3.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node4,6.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 810ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.582/259.641/259.795/0.077 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 810ms,rtt min/avg/max/mdev = 259.582/259.641/259.795/0.077 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.580/109.602/109.610/0.011 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.580/109.602/109.610/0.011 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.934/198.949/198.970/0.012 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.934/198.949/198.970/0.012 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.339/278.365/278.404/0.022 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 278.339/278.365/278.404/0.022 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 824ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.057/0.068/0.080/0.008 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 824ms,rtt min/avg/max/mdev = 0.057/0.068/0.080/0.008 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy15
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.7462241 ],
       [ 2.11970742]]), 'worker-node2': array([[18.6712598 ],
       [ 0.09972192]]), 'worker-node3': array([[18.77082208],
       [ 0.53014264]]), 'worker-node4': array([[22.89586268],
       [ 2.30301688]])}
Test complete.
Process with id: 15 finished in 17.89615805700123 seconds
Total execution time: 610.0576429419998 seconds
error: Unable to delete action 'hellopy22': The requested resource does not exist. (code 9pR24V1mQFaxn35BaWWGNeZmZAWVUOy6)
Run 'wsk --help' for usage.
Process Process-23:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy0': The requested resource does not exist. (code XsC5LPjbJNbCne6RfLrHdy8t8PgJn92d)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy20': The requested resource does not exist. (code 3WKriIawoNSM8GWlnZqMF03AxpngoPRK)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy16': The requested resource does not exist. (code hKvMl7jnc1y3FhHEz27AfdJpT0Uh8M4K)
Run 'wsk --help' for usage.
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy19': The requested resource does not exist. (code XdsoJrs24NOV5fOKYmO7v4pxPwWmNZZR)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy28': The requested resource does not exist. (code xhhU6Xt7dvjFmC1iyfaZygD0Yh886qhx)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy33': The requested resource does not exist. (code cs5RKuq3XhGX6V9Bg4V0epvvouiC5ElK)
Run 'wsk --help' for usage.
Process Process-20:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy26': The requested resource does not exist. (code AISxNBft15SERZMRDeZ72IghKdiTxhzr)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy23': The requested resource does not exist. (code Clgwqs2hDhI6zuTCQgNy7bgwSrr9wV47)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy27': The requested resource does not exist. (code DvURv7FFrAKHzqWpdHCSt9CeCP3m6YSm)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy39': The requested resource does not exist. (code 1raToW5RZqRdYEU0I9eXRO5zQIhFzjYJ)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy34': The requested resource does not exist. (code 2TTIm4dNCR0F6rWAPlxqqF2Yt5prcWWJ)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy32': The requested resource does not exist. (code YEFkLAM32EJexUHxUi0zXm4YXHrIjTCU)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy47': The requested resource does not exist. (code JjKhxXr5e9KErWiDGj1nofWinnC3skch)
Run 'wsk --help' for usage.
ok: deleted action hellopy12
Process Process-33:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-17:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy15
Process Process-16:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-27:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-29:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy49': The requested resource does not exist. (code iYt0kudzgZ9qr6ss7tPt1TcjGz78KOFV)
Run 'wsk --help' for usage.
Process Process-21:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-48:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-13:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-28:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-50:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-24:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-34:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-40:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-35:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy3
Process Process-4:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy5
Process Process-6:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy2
Process Process-3:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy6
ok: deleted action hellopy9
Process Process-7:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-10:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy10
Process Process-11:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy21': The requested resource does not exist. (code c2JGjKWP3V6vfx1yzEh6NSGwK9r99TDN)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy35': The requested resource does not exist. (code qF914c7q4TUdk35FCIMjMtYmJoWpTONB)
Run 'wsk --help' for usage.
Process Process-22:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-36:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy44': The requested resource does not exist. (code TRBrHKdZP5bStBYeG6hsg2VZ1IDuK1JZ)
Run 'wsk --help' for usage.
Process Process-45:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy40': The requested resource does not exist. (code OdKm3e7OL459SNG92rbNuAWQllgIvIdV)
Run 'wsk --help' for usage.
Process Process-41:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy17': The requested resource does not exist. (code Tp2CKfAL2hyOOaNm5BAWS9KFs5pXcOtc)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy31': The requested resource does not exist. (code gdCmJK9YosyAVaRshYkabih4JkF8K7NQ)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy30': The requested resource does not exist. (code y81el34EGyfiyj2jBzLOwVIw6j3Tq1S9)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy36': The requested resource does not exist. (code RTQlVl8HuzcSRSOjn2y9ni1viKR2HasA)
Run 'wsk --help' for usage.
Process Process-18:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-37:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy41': The requested resource does not exist. (code e1ngmvgOOOaER9uj1GiVEIKHEwLD8CuW)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy48': The requested resource does not exist. (code 4NyzmgiiwrWw8k9c5VvK9wE7kEk6UJKY)
Run 'wsk --help' for usage.
Process Process-32:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy25': The requested resource does not exist. (code IQ5S0JZqe2TJw1QolWKsHUiK9xYhTja7)
Run 'wsk --help' for usage.
Process Process-49:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-31:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-42:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy43': The requested resource does not exist. (code v9om5ECXCQ55CBy4GMByZxBl9z8hU2NK)
Run 'wsk --help' for usage.
Process Process-26:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy37': The requested resource does not exist. (code g4KQMVrNvNvIdjjFRdT5MLRBUpNYBdA0)
Run 'wsk --help' for usage.
Process Process-44:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy29': The requested resource does not exist. (code BrcpDIxZJ0l8UajP8AsTsjGYXpSCcKuY)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy18': The requested resource does not exist. (code EHTSfqFonN3h7G2N53dwi8TCIDv7wGQ5)
Run 'wsk --help' for usage.
Process Process-38:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy24': The requested resource does not exist. (code hHBqegrQ9NxjwlftFCVonw1E4oUgkK2S)
Run 'wsk --help' for usage.
Process Process-30:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-19:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-25:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy45': The requested resource does not exist. (code 2YyLMgNSq4sLRCLcbVsGPnJWBtwkEI3D)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy38': The requested resource does not exist. (code rh9gETCxuuHdQCiWVfoqWKdwcQzv9TO9)
Run 'wsk --help' for usage.
Process Process-46:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-39:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy42': The requested resource does not exist. (code 74txD5uvK6BngBMpjEiznCuzOwCNM2YM)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy46': The requested resource does not exist. (code RRdu18ydvxB07QYI7PaHtmT8lHtanFEN)
Run 'wsk --help' for usage.
ok: deleted action hellopy14
Process Process-47:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-43:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy11
ok: deleted action hellopy13
Process Process-15:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-14:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-12:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy1
Process Process-2:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy7
Process Process-8:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy8
Process Process-9:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy4
Process Process-5:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo master-automation,6.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node1,3.1
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.9
+ echo worker-node3,5.9
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node4,3.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.560/259.590/259.626/0.027 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 259.560/259.590/259.626/0.027 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.628/109.715/109.804/0.058 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 109.628/109.715/109.804/0.058 ms'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.158.0.33 ip_address
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.862/198.929/199.042/0.060 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 198.862/198.929/199.042/0.060 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.683/278.746/278.804/0.050 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 278.683/278.746/278.804/0.050 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 813ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.058/0.072/0.082/0.010 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 813ms,rtt min/avg/max/mdev = 0.058/0.072/0.082/0.010 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy1
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.48057723],
       [ 2.20032288]]), 'worker-node2': array([[18.57165726],
       [ 0.18938155]]), 'worker-node3': array([[19.08996048],
       [ 1.12273344]]), 'worker-node4': array([[22.953926  ],
       [ 2.12937733]])}
Test complete.
Process with id: 1 finished in 20.526086425999893 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.5
+ echo master-automation,6.5
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.1
+ echo worker-node3,9.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=35.3
+ echo worker-node4,35.3
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.525/259.615/259.696/0.058 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.525/259.615/259.696/0.058 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 109.649/109.735/109.814/0.060 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.649/109.735/109.814/0.060 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.940/198.999/199.057/0.044 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.940/198.999/199.057/0.044 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.639/278.719/278.837/0.068 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 278.639/278.719/278.837/0.068 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 816ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.056/0.064/0.082/0.009 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 816ms,rtt min/avg/max/mdev = 0.056/0.064/0.082/0.009 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy2
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.08517071],
       [ 1.52055176]]), 'worker-node2': array([[18.11109843],
       [-0.21893923]]), 'worker-node3': array([[19.07352725],
       [ 1.47992371]]), 'worker-node4': array([[26.80607871],
       [ 8.12339471]])}
Test complete.
Process with id: 2 finished in 13.932424528999036 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.1
+ echo master-automation,9.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.4
+ echo worker-node4,9.4
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 807ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.546/259.588/259.678/0.052 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 807ms,rtt min/avg/max/mdev = 259.546/259.588/259.678/0.052 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.656/109.721/109.764/0.042 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.656/109.721/109.764/0.042 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.905/198.986/199.122/0.083 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.905/198.986/199.122/0.083 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.732/278.756/278.801/0.025 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 278.732/278.756/278.801/0.025 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 814ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.062/0.086/0.106/0.014 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 814ms,rtt min/avg/max/mdev = 0.062/0.086/0.106/0.014 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ ipa=10.128.0.35
++ awk -F, '{print $2}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy3
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[28.33929997],
       [ 5.07606729]]), 'worker-node2': array([[21.63868255],
       [ 1.6387677 ]]), 'worker-node3': array([[20.88542773],
       [ 1.20895201]]), 'worker-node4': array([[24.62233426],
       [ 3.06930536]])}
Test complete.
Process with id: 3 finished in 13.733607071999359 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=50.0
+ echo master-automation,50.0
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.5
+ echo worker-node3,6.5
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node4,6.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 259.600/259.629/259.663/0.026 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 259.600/259.629/259.663/0.026 ms, pipe 2'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.128.0.35 ip_address
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.663/109.702/109.785/0.043 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.663/109.702/109.785/0.043 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.915/198.984/199.046/0.047 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.915/198.984/199.046/0.047 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ tail -1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.152.0.33
+ metric_rtt='rtt min/avg/max/mdev = 278.640/278.688/278.722/0.026 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 278.640/278.688/278.722/0.026 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 815ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.074/0.092/0.113/0.013 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 815ms,rtt min/avg/max/mdev = 0.074/0.092/0.113/0.013 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy4
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[25.29578174],
       [ 1.94243812]]), 'worker-node2': array([[18.52841722],
       [-0.64437157]]), 'worker-node3': array([[18.82130058],
       [ 0.67337971]]), 'worker-node4': array([[22.97913838],
       [ 2.37912905]])}
Test complete.
Process with id: 4 finished in 19.08195647299908 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo master-automation,6.2
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.1
+ echo worker-node2,9.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node3,3.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node4,3.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.559/259.604/259.677/0.046 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 259.559/259.604/259.677/0.046 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.608/109.657/109.704/0.039 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 109.608/109.657/109.704/0.039 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.865/198.974/199.133/0.089 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.865/198.974/199.133/0.089 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 807ms'
++ tail -1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.152.0.33
+ metric_rtt='rtt min/avg/max/mdev = 278.657/278.710/278.745/0.029 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 807ms,rtt min/avg/max/mdev = 278.657/278.710/278.745/0.029 ms, pipe 2'
+ read -r dest_ip
++ tail -n 2
++ head -1
++ ping -c 5 -i 0.2 -q 10.156.0.38
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 813ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.039/0.062/0.092/0.017 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 813ms,rtt min/avg/max/mdev = 0.039/0.062/0.092/0.017 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy5
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.19300097],
       [ 1.68585525]]), 'worker-node2': array([[18.92209006],
       [ 0.95297438]]), 'worker-node3': array([[19.22597865],
       [ 1.07458811]]), 'worker-node4': array([[23.0032738],
       [ 2.0790851]])}
Test complete.
Process with id: 5 finished in 11.995531253000081 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.7
+ echo master-automation,5.7
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=12.5
+ echo worker-node2,12.5
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node3,0.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=20.6
+ echo worker-node4,20.6
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ awk -F, '{print $2}'
++ grep 10.140.0.33 ip_address
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.550/259.612/259.704/0.056 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 259.550/259.612/259.704/0.056 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.655/109.706/109.813/0.054 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.655/109.706/109.813/0.054 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.914/199.004/199.198/0.101 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.914/199.004/199.198/0.101 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.625/278.702/278.784/0.052 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 278.625/278.702/278.784/0.052 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 819ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.053/0.079/0.107/0.019 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 819ms,rtt min/avg/max/mdev = 0.053/0.079/0.107/0.019 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ ipa=10.128.0.35
++ awk -F, '{print $2}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy6
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.09097553],
       [ 1.48025666]]), 'worker-node2': array([[19.18823323],
       [ 1.43687641]]), 'worker-node3': array([[19.19983616],
       [ 0.83024613]]), 'worker-node4': array([[24.91545947],
       [ 5.03471545]])}
Test complete.
Process with id: 6 finished in 19.42749557299976 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=34.2
+ echo master-automation,34.2
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.9
+ echo worker-node2,5.9
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node4,6.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.549/259.635/259.726/0.069 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 259.549/259.635/259.726/0.069 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.620/109.662/109.749/0.047 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.620/109.662/109.749/0.047 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.913/198.962/199.031/0.040 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 198.913/198.962/199.031/0.040 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ tail -1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.152.0.33
+ metric_rtt='rtt min/avg/max/mdev = 278.686/278.707/278.751/0.023 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 278.686/278.707/278.751/0.023 ms, pipe 2'
+ read -r dest_ip
++ tail -n 2
++ head -1
++ ping -c 5 -i 0.2 -q 10.156.0.38
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 826ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.061/0.083/0.115/0.022 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 826ms,rtt min/avg/max/mdev = 0.061/0.083/0.115/0.022 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy7
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[26.19676726],
       [ 3.23226971]]), 'worker-node2': array([[20.16375963],
       [ 1.168176  ]]), 'worker-node3': array([[19.95242655],
       [ 1.07917861]]), 'worker-node4': array([[23.72345566],
       [ 2.52689521]])}
Test complete.
Process with id: 7 finished in 15.027098180999019 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=42.9
+ echo master-automation,42.9
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node1,3.1
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node2,3.2
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node3,0.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.7
+ echo worker-node4,9.7
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.547/259.599/259.705/0.057 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.547/259.599/259.705/0.057 ms, pipe 2'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.128.0.35 ip_address
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.666/109.712/109.793/0.049 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.666/109.712/109.793/0.049 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.862/198.925/198.998/0.043 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.862/198.925/198.998/0.043 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.667/278.738/278.801/0.049 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 278.667/278.738/278.801/0.049 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 815ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.057/0.082/0.140/0.030 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 815ms,rtt min/avg/max/mdev = 0.057/0.082/0.140/0.030 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy8
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[24.98853743],
       [ 2.24595914]]), 'worker-node2': array([[18.85957813],
       [ 0.17323586]]), 'worker-node3': array([[1.85457251e+01],
       [1.79862956e-02]]), 'worker-node4': array([[23.00811515],
       [ 2.61729662]])}
Test complete.
Process with id: 8 finished in 20.037806641001225 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo master-automation,6.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node2,6.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node3,6.2
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.9
+ echo worker-node4,5.9
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 807ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 259.570/259.618/259.743/0.062 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 807ms,rtt min/avg/max/mdev = 259.570/259.618/259.743/0.062 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.754/109.811/109.849/0.036 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 109.754/109.811/109.849/0.036 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.888/198.961/199.035/0.057 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.888/198.961/199.035/0.057 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.686/278.740/278.765/0.028 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 278.686/278.740/278.765/0.028 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 820ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.060/0.070/0.079/0.007 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 820ms,rtt min/avg/max/mdev = 0.060/0.070/0.079/0.007 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ awk -F, '{print $2}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ name=worker-node2
++ awk -F, '{print $3}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy9
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.29943664],
       [ 1.84314591]]), 'worker-node2': array([[18.69519515],
       [ 0.50990829]]), 'worker-node3': array([[19.31171006],
       [ 1.37752437]]), 'worker-node4': array([[23.47745308],
       [ 2.75678451]])}
Test complete.
Process with id: 9 finished in 17.713955518000148 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo master-automation,6.2
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node2,3.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node3,3.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=8.8
+ echo worker-node4,8.8
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.517/259.593/259.661/0.053 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 259.517/259.593/259.661/0.053 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.755/109.788/109.835/0.028 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 109.755/109.788/109.835/0.028 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.905/198.948/199.071/0.061 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.905/198.948/199.071/0.061 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.677/278.706/278.739/0.024 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 278.677/278.706/278.739/0.024 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 819ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.049/0.062/0.085/0.013 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 819ms,rtt min/avg/max/mdev = 0.049/0.062/0.085/0.013 ms'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ ipa=10.128.0.35
++ awk -F, '{print $2}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ name=worker-node2
++ awk -F, '{print $3}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy10
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.59095277],
       [ 1.87713436]]), 'worker-node2': array([[18.49604945],
       [-0.0600165 ]]), 'worker-node3': array([[18.62038073],
       [ 0.44463107]]), 'worker-node4': array([[23.10339094],
       [ 2.73425123]])}
Test complete.
Process with id: 10 finished in 17.41840602299999 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo master-automation,6.2
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.3
+ echo worker-node1,3.3
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=12.5
+ echo worker-node4,12.5
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.411/259.499/259.571/0.053 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 259.411/259.499/259.571/0.053 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.296/109.376/109.481/0.070 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.296/109.376/109.481/0.070 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.961/199.012/199.179/0.083 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.961/199.012/199.179/0.083 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ tail -n 2
++ tail -1
++ ping -c 5 -i 0.2 -q 10.152.0.33
+ metric_rtt='rtt min/avg/max/mdev = 278.650/278.703/278.751/0.035 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 278.650/278.703/278.751/0.035 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 818ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.051/0.100/0.178/0.043 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 818ms,rtt min/avg/max/mdev = 0.051/0.100/0.178/0.043 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy11
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.77038441],
       [ 2.49980607]]), 'worker-node2': array([[18.81879788],
       [ 0.3506839 ]]), 'worker-node3': array([[18.95639009],
       [ 0.69942266]]), 'worker-node4': array([[23.80136219],
       [ 3.52626776]])}
Test complete.
Process with id: 11 finished in 13.44633707399953 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=12.9
+ echo master-automation,12.9
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node1,3.2
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ awk -F, '{print $2}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ name=worker-node2
++ awk -F, '{print $3}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node2,6.2
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node3,0.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node4,3.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.476/259.511/259.545/0.024 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 259.476/259.511/259.545/0.024 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.250/109.306/109.383/0.044 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.250/109.306/109.383/0.044 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ tail -n 2
++ tail -1
++ ping -c 5 -i 0.2 -q 10.158.0.33
+ metric_rtt='rtt min/avg/max/mdev = 198.919/198.979/199.098/0.072 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 198.919/198.979/199.098/0.072 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.695/278.746/278.788/0.030 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 278.695/278.746/278.788/0.030 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 815ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.049/0.068/0.096/0.016 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 815ms,rtt min/avg/max/mdev = 0.049/0.068/0.096/0.016 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ awk -F, '{print $2}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy12
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[25.41794434],
       [ 2.92775421]]), 'worker-node2': array([[19.66919869],
       [ 1.11158326]]), 'worker-node3': array([[19.31962386],
       [ 0.54889796]]), 'worker-node4': array([[22.84008283],
       [ 1.69465028]])}
Test complete.
Process with id: 12 finished in 13.622591674000432 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo master-automation,3.0
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node3,3.2
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node4,6.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ awk -F, '{print $2}'
++ grep 10.140.0.33 ip_address
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 807ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.490/259.504/259.533/0.016 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 807ms,rtt min/avg/max/mdev = 259.490/259.504/259.533/0.016 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ head -1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.128.0.35
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 109.339/109.382/109.440/0.034 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.339/109.382/109.440/0.034 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ tail -n 2
++ tail -1
++ ping -c 5 -i 0.2 -q 10.158.0.33
+ metric_rtt='rtt min/avg/max/mdev = 198.843/198.936/198.984/0.049 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.843/198.936/198.984/0.049 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.690/278.713/278.774/0.031 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 278.690/278.713/278.774/0.031 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 814ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.057/0.085/0.119/0.020 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 814ms,rtt min/avg/max/mdev = 0.057/0.085/0.119/0.020 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy13
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[23.85600775],
       [ 1.24023847]]), 'worker-node2': array([[17.51162042],
       [-0.93846468]]), 'worker-node3': array([[1.78053254e+01],
       [1.28020571e-02]]), 'worker-node4': array([[22.22131989],
       [ 2.0809617 ]])}
Test complete.
Process with id: 13 finished in 13.655151001999911 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.7
+ echo master-automation,5.7
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node3,6.2
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.4
+ echo worker-node4,9.4
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ awk -F, '{print $1}'
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $2}'
++ grep 10.140.0.33 ip_address
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.456/259.514/259.563/0.036 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.456/259.514/259.563/0.036 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 109.313/109.366/109.500/0.069 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.313/109.366/109.500/0.069 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.879/198.930/198.971/0.040 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.879/198.930/198.971/0.040 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ tail -1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.152.0.33
+ metric_rtt='rtt min/avg/max/mdev = 278.661/278.709/278.778/0.039 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 278.661/278.709/278.778/0.039 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 820ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.057/0.070/0.083/0.011 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 820ms,rtt min/avg/max/mdev = 0.057/0.070/0.083/0.011 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy14
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[23.68861323],
       [ 1.58020685]]), 'worker-node2': array([[17.91525798],
       [-0.13231572]]), 'worker-node3': array([[18.66716121],
       [ 1.04305339]]), 'worker-node4': array([[23.4257477 ],
       [ 3.23990637]])}
Test complete.
Process with id: 14 finished in 17.732060289999936 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=21.1
+ echo master-automation,21.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=11.8
+ echo worker-node2,11.8
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node4,6.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.461/259.505/259.614/0.055 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 259.461/259.505/259.614/0.055 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 109.285/109.349/109.453/0.055 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.285/109.349/109.453/0.055 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.899/198.973/199.021/0.043 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.899/198.973/199.021/0.043 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.688/278.777/278.866/0.063 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 278.688/278.777/278.866/0.063 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 821ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.045/0.062/0.075/0.010 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 821ms,rtt min/avg/max/mdev = 0.045/0.062/0.075/0.010 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy15
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.74533549],
       [ 2.20895087]]), 'worker-node2': array([[19.70328098],
       [ 1.71585393]]), 'worker-node3': array([[19.92746521],
       [ 1.50791865]]), 'worker-node4': array([[23.87772786],
       [ 2.82040892]])}
Test complete.
Process with id: 15 finished in 13.162904344999333 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=28.1
+ echo master-automation,28.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node1,3.1
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node4,6.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.462/259.510/259.560/0.035 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 259.462/259.510/259.560/0.035 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.348/109.414/109.451/0.035 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.348/109.414/109.451/0.035 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.954/199.037/199.147/0.074 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.954/199.037/199.147/0.074 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.671/278.719/278.800/0.047 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 278.671/278.719/278.800/0.047 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 809ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.055/0.073/0.119/0.023 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 809ms,rtt min/avg/max/mdev = 0.055/0.073/0.119/0.023 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy16
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[25.17542668],
       [ 2.42343345]]), 'worker-node2': array([[18.99782683],
       [ 0.24784717]]), 'worker-node3': array([[19.00948151],
       [ 0.60741639]]), 'worker-node4': array([[23.0512581 ],
       [ 2.31092359]])}
Test complete.
Process with id: 16 finished in 16.82425457700083 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=8.6
+ echo master-automation,8.6
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node3,3.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.5
+ echo worker-node4,6.5
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.454/259.483/259.509/0.019 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 259.454/259.483/259.509/0.019 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.335/109.392/109.518/0.065 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.335/109.392/109.518/0.065 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.898/199.000/199.176/0.094 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 198.898/199.000/199.176/0.094 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.743/278.750/278.757/0.005 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 278.743/278.750/278.757/0.005 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 817ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.069/0.088/0.117/0.016 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 817ms,rtt min/avg/max/mdev = 0.069/0.088/0.117/0.016 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ awk -F, '{print $2}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy17
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.19831241],
       [ 1.62918757]]), 'worker-node2': array([[17.83527623],
       [-0.71940018]]), 'worker-node3': array([[18.03373178],
       [ 0.08432403]]), 'worker-node4': array([[22.40158481],
       [ 2.15427844]])}
Test complete.
Process with id: 17 finished in 16.66201597500003 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo master-automation,6.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node1,6.2
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node3,0.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.5
+ echo worker-node4,6.5
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.475/259.516/259.563/0.028 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.475/259.516/259.563/0.028 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.387/109.440/109.518/0.051 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.387/109.440/109.518/0.051 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 198.888/198.919/198.972/0.033 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.888/198.919/198.972/0.033 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.686/278.777/278.903/0.073 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 278.686/278.777/278.903/0.073 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 818ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.070/0.085/0.106/0.011 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 818ms,rtt min/avg/max/mdev = 0.070/0.085/0.106/0.011 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy18
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[24.52815228],
       [ 2.71751838]]), 'worker-node2': array([[18.42160006],
       [-0.0260326 ]]), 'worker-node3': array([[18.24596752],
       [-0.06073312]]), 'worker-node4': array([[22.45555898],
       [ 2.02954621]])}
Test complete.
Process with id: 18 finished in 20.0280274630004 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.1
+ echo master-automation,9.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node1,3.2
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node2,6.2
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node3,6.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.3
+ echo worker-node4,3.3
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.401/259.453/259.525/0.040 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 259.401/259.453/259.525/0.040 ms, pipe 2'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.128.0.35 ip_address
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 109.360/109.431/109.566/0.070 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.360/109.431/109.566/0.070 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.923/198.987/199.032/0.044 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.923/198.987/199.032/0.044 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 807ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.659/278.695/278.734/0.030 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 807ms,rtt min/avg/max/mdev = 278.659/278.695/278.734/0.030 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 820ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.044/0.075/0.108/0.021 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 820ms,rtt min/avg/max/mdev = 0.044/0.075/0.108/0.021 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy19
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.15703913],
       [ 2.08818961]]), 'worker-node2': array([[18.71092678],
       [ 0.70706257]]), 'worker-node3': array([[19.38464492],
       [ 1.4910341 ]]), 'worker-node4': array([[23.25429507],
       [ 2.35778562]])}
Test complete.
Process with id: 19 finished in 18.335605484000553 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo master-automation,6.2
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.9
+ echo worker-node2,5.9
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node3,6.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node4,3.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.473/259.523/259.613/0.047 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 259.473/259.523/259.613/0.047 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.361/109.411/109.499/0.050 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.361/109.411/109.499/0.050 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.872/198.923/199.050/0.064 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.872/198.923/199.050/0.064 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 278.695/278.723/278.753/0.024 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 278.695/278.723/278.753/0.024 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 814ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.056/0.064/0.087/0.011 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 814ms,rtt min/avg/max/mdev = 0.056/0.064/0.087/0.011 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy20
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.32153433],
       [ 1.63537758]]), 'worker-node2': array([[18.58601351],
       [ 0.32631388]]), 'worker-node3': array([[19.17256411],
       [ 1.24912933]]), 'worker-node4': array([[23.03172867],
       [ 2.18600091]])}
Test complete.
Process with id: 20 finished in 18.588030561000778 seconds
Total execution time: 820.7266670109984 seconds
error: Unable to delete action 'hellopy0': The requested resource does not exist. (code rD6xjgtq6N5cy54mIzoufHZlO8koPhRU)
Run 'wsk --help' for usage.
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy23': The requested resource does not exist. (code ub7WLi4BxbKDDU33mgvCHvul5MvKWQni)
Run 'wsk --help' for usage.
Process Process-24:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy34': The requested resource does not exist. (code oQIvSzMxKlmIr9PlFqVHqtPNb1omLy30)
Run 'wsk --help' for usage.
Process Process-35:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy20
ok: deleted action hellopy19
Process Process-20:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-21:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy39': The requested resource does not exist. (code n1KacYh3d4jXh4kqPPbDZaMKM4jIQWYH)
Run 'wsk --help' for usage.
Process Process-40:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy28': The requested resource does not exist. (code TUrOPms4TRlg8qkJlhvbIh3tUZbePT62)
Run 'wsk --help' for usage.
Process Process-29:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy27': The requested resource does not exist. (code jN4MwF3OTl3ycSJY6AEvkBmhbicKahqD)
Run 'wsk --help' for usage.
Process Process-28:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy32': The requested resource does not exist. (code UqoxDC4n7lu897gjuW7xbTKiBUX7Pxzi)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy22': The requested resource does not exist. (code pCDFdVq78Lso2mNp7Z4mu9WB5u3dGwpC)
Run 'wsk --help' for usage.
Process Process-33:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-23:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy12
ok: deleted action hellopy15
ok: deleted action hellopy18
ok: deleted action hellopy3
ok: deleted action hellopy14
ok: deleted action hellopy13
ok: deleted action hellopy11
Process Process-4:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-13:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy8
Process Process-19:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy26': The requested resource does not exist. (code eoT5bcYdWBEartCcSZh0n7uOUD2Em8Xj)
Run 'wsk --help' for usage.
Process Process-14:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-9:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-27:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-12:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-15:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-16:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy45': The requested resource does not exist. (code oYq0pvmJy2q1wA0EwOmD3BNjIgcAjGTG)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy24': The requested resource does not exist. (code 1Yq8TfqeGDE3C6Xv9yIKufaafWNAU24G)
Run 'wsk --help' for usage.
Process Process-46:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-25:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy35': The requested resource does not exist. (code pnftIksJNmQ5RQm4q0Lbs8wrpkFN0Trl)
Run 'wsk --help' for usage.
Process Process-36:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy49': The requested resource does not exist. (code 5XG2WZdrFyEze7owkqVYBUBn9mb8IlJr)
Run 'wsk --help' for usage.
Process Process-50:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy47': The requested resource does not exist. (code en0FOmdGq7dWJqBsghtzJbm9x0Y6VReV)
Run 'wsk --help' for usage.
Process Process-48:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy44': The requested resource does not exist. (code aAgJqDkWOAgU1x1SgdtcRVxPTZgOnLFE)
Run 'wsk --help' for usage.
Process Process-45:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy17
Process Process-18:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy2
Process Process-3:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy21': The requested resource does not exist. (code vdbdPmL8Ii5mSiBymrJAbqLtgktDAZT1)
Run 'wsk --help' for usage.
Process Process-22:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy9
Process Process-10:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy1
Process Process-2:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy37': The requested resource does not exist. (code PvovMlY7dw906PI3pLFYALeFqHaYNcDL)
Run 'wsk --help' for usage.
Process Process-38:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy43': The requested resource does not exist. (code FWjSugmcwWB2hg2l0vMNMCw9QG87xGI4)
Run 'wsk --help' for usage.
Process Process-44:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy38': The requested resource does not exist. (code PeukzOXSkav2ugDwzIbfQLUh4NzeNgDO)
Run 'wsk --help' for usage.
Process Process-39:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy25': The requested resource does not exist. (code 6C6Ax4HGEjZzSQCpgwNca6jNnvy0Z0Sj)
Run 'wsk --help' for usage.
Process Process-26:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy42': The requested resource does not exist. (code Tb1DV3NgwGOTztXaDjFZGQToMW6usw72)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy36': The requested resource does not exist. (code cJVxrrx1ElMF8nHAKHe1dJuKDZFW9urJ)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy41': The requested resource does not exist. (code yAGT4x9dPJfzMTEQMlxvN35J2cmh88CS)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy48': The requested resource does not exist. (code soNwj0CQ0Iuhqxe8nrLMYRgohmTYJXlR)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy33': The requested resource does not exist. (code UqjnAlksnBe2Rwfd5NOR8Iemc2pl5vVZ)
Run 'wsk --help' for usage.
Process Process-37:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy46': The requested resource does not exist. (code GiPgyjAhsg7AvBPCNlpaXKdJPlmebPOp)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy31': The requested resource does not exist. (code lCBuIMPA8ZRrMG8HmsKM9fbzyCDM73S1)
Run 'wsk --help' for usage.
Process Process-49:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy40': The requested resource does not exist. (code p2PoKWEn6gHbwoBMdE9vLniZHikyfM3H)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy29': The requested resource does not exist. (code yvnP9XpY5Gq387DYmetDplgkUEwUQ5yn)
Run 'wsk --help' for usage.
Process Process-32:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-41:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-34:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-42:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-30:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-43:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-47:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy30': The requested resource does not exist. (code qAgXBUwb8z07jzgbzRjHqVZetcsox5KT)
Run 'wsk --help' for usage.
Process Process-31:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy16
Process Process-17:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy7
ok: deleted action hellopy10
ok: deleted action hellopy5
ok: deleted action hellopy4
Process Process-8:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy6
Process Process-6:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-11:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-5:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-7:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=14.7
+ echo master-automation,14.7
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node1,3.1
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node3,6.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.4
+ echo worker-node4,9.4
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ awk -F, '{print $1}'
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $2}'
++ grep 10.140.0.33 ip_address
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ tail -n 2
++ tail -1
++ ping -c 5 -i 0.2 -q 10.140.0.33
+ metric_rtt='rtt min/avg/max/mdev = 259.468/259.499/259.533/0.025 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 259.468/259.499/259.533/0.025 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.310/109.373/109.462/0.061 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.310/109.373/109.462/0.061 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.903/198.986/199.100/0.064 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 198.903/198.986/199.100/0.064 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 807ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.700/278.720/278.762/0.022 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 807ms,rtt min/avg/max/mdev = 278.700/278.720/278.762/0.022 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 821ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.058/0.089/0.130/0.023 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 821ms,rtt min/avg/max/mdev = 0.058/0.089/0.130/0.023 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy1
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.50107188],
       [ 2.10290559]]), 'worker-node2': array([[18.52963284],
       [ 0.1170135 ]]), 'worker-node3': array([[19.06662028],
       [ 1.11572362]]), 'worker-node4': array([[23.65769675],
       [ 3.23811307]])}
Test complete.
Process with id: 1 finished in 16.570571953998297 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo master-automation,0.0
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node2,3.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.5
+ echo worker-node3,6.5
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.1
+ echo worker-node4,9.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.424/259.483/259.564/0.048 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.424/259.483/259.564/0.048 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.285/109.325/109.408/0.046 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.285/109.325/109.408/0.046 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.832/198.929/199.051/0.071 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.832/198.929/199.051/0.071 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.698/278.737/278.795/0.032 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 278.698/278.737/278.795/0.032 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 818ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.044/0.067/0.114/0.027 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 818ms,rtt min/avg/max/mdev = 0.044/0.067/0.114/0.027 ms'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ awk -F, '{print $2}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy2
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.86193912],
       [ 2.17787516]]), 'worker-node2': array([[18.72854932],
       [ 0.10309863]]), 'worker-node3': array([[19.20660802],
       [ 1.15193715]]), 'worker-node4': array([[23.70886025],
       [ 3.19114613]])}
Test complete.
Process with id: 2 finished in 17.843323786000838 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo master-automation,3.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node1,6.2
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node2,3.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node4,3.0
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.460/259.489/259.561/0.036 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 259.460/259.489/259.561/0.036 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.204/109.234/109.273/0.027 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.204/109.234/109.273/0.027 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.938/198.976/199.005/0.026 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 198.938/198.976/199.005/0.026 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 278.710/278.755/278.794/0.032 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 278.710/278.755/278.794/0.032 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 815ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.065/0.077/0.094/0.010 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 815ms,rtt min/avg/max/mdev = 0.065/0.077/0.094/0.010 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy3
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[25.58985136],
       [ 3.25048968]]), 'worker-node2': array([[19.50564713],
       [ 0.73342449]]), 'worker-node3': array([[19.45130427],
       [ 0.8697781 ]]), 'worker-node4': array([[23.01867457],
       [ 1.87670954]])}
Test complete.
Process with id: 3 finished in 15.504442549998203 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo master-automation,6.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node1,3.1
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node4,3.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ tail -1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.140.0.33
+ metric_rtt='rtt min/avg/max/mdev = 259.467/259.553/259.750/0.105 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 259.467/259.553/259.750/0.105 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ head -1
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.203/109.233/109.329/0.047 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.203/109.233/109.329/0.047 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.876/198.930/199.028/0.053 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.876/198.930/199.028/0.053 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.659/278.749/278.964/0.110 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 278.659/278.749/278.964/0.110 ms, pipe 2'
+ read -r dest_ip
++ tail -n 2
++ head -1
++ ping -c 5 -i 0.2 -q 10.156.0.38
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 815ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.038/0.059/0.076/0.013 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 815ms,rtt min/avg/max/mdev = 0.038/0.059/0.076/0.013 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy4
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.37859856],
       [ 1.89634375]]), 'worker-node2': array([[ 1.83819909e+01],
       [-8.46170932e-03]]), 'worker-node3': array([[18.59273224],
       [ 0.51171167]]), 'worker-node4': array([[22.46697017],
       [ 1.78028163]])}
Test complete.
Process with id: 4 finished in 12.965000752999913 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=11.4
+ echo master-automation,11.4
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.5
+ echo worker-node2,6.5
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node3,3.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.9
+ echo worker-node4,5.9
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 808ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.444/259.455/259.474/0.010 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 808ms,rtt min/avg/max/mdev = 259.444/259.455/259.474/0.010 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.171/109.223/109.310/0.049 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.171/109.223/109.310/0.049 ms'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.158.0.33 ip_address
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.875/198.943/199.105/0.082 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.875/198.943/199.105/0.082 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 807ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.638/278.702/278.765/0.041 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 807ms,rtt min/avg/max/mdev = 278.638/278.702/278.765/0.041 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 815ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.065/0.084/0.116/0.017 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 815ms,rtt min/avg/max/mdev = 0.065/0.084/0.116/0.017 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy5
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[23.69630843],
       [ 1.3451237 ]]), 'worker-node2': array([[18.21752227],
       [ 0.31544177]]), 'worker-node3': array([[18.62165338],
       [ 0.7336638 ]]), 'worker-node4': array([[22.87779627],
       [ 2.40965347]])}
Test complete.
Process with id: 5 finished in 18.57116740499987 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.1
+ echo master-automation,9.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node2,6.2
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=8.6
+ echo worker-node3,8.6
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node4,0.0
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ awk -F, '{print $1}'
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $2}'
++ grep 10.140.0.33 ip_address
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.461/259.521/259.577/0.038 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 259.461/259.521/259.577/0.038 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.221/109.266/109.319/0.035 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.221/109.266/109.319/0.035 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.915/198.953/198.993/0.028 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 198.915/198.953/198.993/0.028 ms'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.152.0.33 ip_address
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.655/278.698/278.740/0.033 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 278.655/278.698/278.740/0.033 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 813ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.059/0.070/0.084/0.009 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 813ms,rtt min/avg/max/mdev = 0.059/0.070/0.084/0.009 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy6
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.14929682],
       [ 1.71844106]]), 'worker-node2': array([[18.55829527],
       [ 0.4564563 ]]), 'worker-node3': array([[19.49963771],
       [ 1.78879681]]), 'worker-node4': array([[23.04391439],
       [ 1.95298328]])}
Test complete.
Process with id: 6 finished in 15.982416838000063 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo master-automation,0.0
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node3,6.2
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.9
+ echo worker-node4,5.9
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.398/259.464/259.532/0.054 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 259.398/259.464/259.532/0.054 ms, pipe 2'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.128.0.35 ip_address
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.158/109.272/109.418/0.085 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.158/109.272/109.418/0.085 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.908/198.965/199.049/0.047 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.908/198.965/199.049/0.047 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.657/278.708/278.753/0.041 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 278.657/278.708/278.753/0.041 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 822ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.076/0.080/0.086/0.003 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 822ms,rtt min/avg/max/mdev = 0.076/0.080/0.086/0.003 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy7
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.05690276],
       [ 1.38819848]]), 'worker-node2': array([[18.02546523],
       [-0.31007789]]), 'worker-node3': array([[18.65696704],
       [ 0.90935375]]), 'worker-node4': array([[22.96322527],
       [ 2.52385314]])}
Test complete.
Process with id: 7 finished in 17.362988609998865 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.4
+ echo master-automation,9.4
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node2,3.2
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node3,6.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node4,6.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 259.432/259.510/259.662/0.083 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 259.432/259.510/259.662/0.083 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.209/109.267/109.327/0.040 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.209/109.267/109.327/0.040 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.890/199.010/199.103/0.073 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.890/199.010/199.103/0.073 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.734/278.798/278.867/0.052 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 278.734/278.798/278.867/0.052 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 815ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.058/0.079/0.099/0.014 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 815ms,rtt min/avg/max/mdev = 0.058/0.079/0.099/0.014 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy8
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.23601792],
       [ 1.78452349]]), 'worker-node2': array([[18.2796678],
       [-0.0474588]]), 'worker-node3': array([[18.8773664 ],
       [ 1.03684834]]), 'worker-node4': array([[23.15155876],
       [ 2.61868767]])}
Test complete.
Process with id: 8 finished in 17.430074921001506 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.5
+ echo master-automation,6.5
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node1,3.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.7
+ echo worker-node3,5.7
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=26.5
+ echo worker-node4,26.5
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.476/259.530/259.619/0.049 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.476/259.530/259.619/0.049 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.357/109.410/109.479/0.041 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.357/109.410/109.479/0.041 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.906/198.948/198.999/0.033 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.906/198.948/198.999/0.033 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ head -1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.152.0.33
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.628/278.710/278.822/0.068 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 278.628/278.710/278.822/0.068 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 818ms'
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.062/0.067/0.077/0.006 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 818ms,rtt min/avg/max/mdev = 0.062/0.067/0.077/0.006 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy9
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.71733825],
       [ 2.36223248]]), 'worker-node2': array([[18.74067893],
       [ 0.26495087]]), 'worker-node3': array([[19.18266559],
       [ 1.11657513]]), 'worker-node4': array([[25.70120136],
       [ 6.28739286]])}
Test complete.
Process with id: 9 finished in 17.18007525000212 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=15.2
+ echo master-automation,15.2
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node2,3.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.9
+ echo worker-node3,5.9
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node4,3.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ head -1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ tail -n 2
++ tail -1
++ ping -c 5 -i 0.2 -q 10.140.0.33
+ metric_rtt='rtt min/avg/max/mdev = 259.439/259.481/259.513/0.023 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.439/259.481/259.513/0.023 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ tail -n 2
++ tail -1
++ ping -c 5 -i 0.2 -q 10.128.0.35
+ metric_rtt='rtt min/avg/max/mdev = 109.299/109.344/109.383/0.029 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.299/109.344/109.383/0.029 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.906/198.973/199.064/0.072 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 198.906/198.973/199.064/0.072 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 278.658/278.712/278.790/0.043 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 278.658/278.712/278.790/0.043 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 814ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.040/0.064/0.086/0.016 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 814ms,rtt min/avg/max/mdev = 0.040/0.064/0.086/0.016 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy10
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[27.06937207],
       [ 3.97607315]]), 'worker-node2': array([[20.54229214],
       [ 1.03579707]]), 'worker-node3': array([[20.42026741],
       [ 1.44324109]]), 'worker-node4': array([[23.75323633],
       [ 2.17559144]])}
Test complete.
Process with id: 10 finished in 13.919334572998196 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=28.6
+ echo master-automation,28.6
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node3,3.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=8.8
+ echo worker-node4,8.8
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 259.477/259.504/259.542/0.024 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 259.477/259.504/259.542/0.024 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.303/109.343/109.391/0.030 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.303/109.343/109.391/0.030 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.911/198.953/199.031/0.043 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.911/198.953/199.031/0.043 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 809ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.664/278.722/278.825/0.059 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 809ms,rtt min/avg/max/mdev = 278.664/278.722/278.825/0.059 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 815ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.051/0.077/0.102/0.019 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 815ms,rtt min/avg/max/mdev = 0.051/0.077/0.102/0.019 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy11
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.50545304],
       [ 1.44843467]]), 'worker-node2': array([[17.9206113],
       [-0.8812337]]), 'worker-node3': array([[18.01329048],
       [-0.03639603]]), 'worker-node4': array([[22.61068537],
       [ 2.48711221]])}
Test complete.
Process with id: 11 finished in 13.083323111000936 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo master-automation,3.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=30.0
+ echo worker-node1,30.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node3,3.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node4,6.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ awk -F, '{print $2}'
++ grep 10.140.0.33 ip_address
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.468/259.480/259.497/0.010 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 259.468/259.480/259.497/0.010 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 109.301/109.368/109.424/0.041 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.301/109.368/109.424/0.041 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.963/198.986/199.030/0.028 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.963/198.986/199.030/0.028 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.661/278.743/278.810/0.050 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 278.661/278.743/278.810/0.050 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 814ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.046/0.076/0.095/0.018 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 814ms,rtt min/avg/max/mdev = 0.046/0.076/0.095/0.018 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy12
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[27.52237749],
       [ 7.1791663 ]]), 'worker-node2': array([[22.01029666],
       [ 3.15911321]]), 'worker-node3': array([[21.644441  ],
       [ 2.17024007]]), 'worker-node4': array([[25.0048525 ],
       [ 3.04807914]])}
Test complete.
Process with id: 12 finished in 19.364726739000616 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo master-automation,6.1
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.9
+ echo worker-node2,5.9
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node3,6.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=16.1
+ echo worker-node4,16.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.369/259.454/259.659/0.104 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 259.369/259.454/259.659/0.104 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.317/109.386/109.427/0.039 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.317/109.386/109.427/0.039 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.949/198.967/198.987/0.013 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.949/198.967/198.987/0.013 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.640/278.712/278.740/0.037 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 278.640/278.712/278.740/0.037 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 818ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.046/0.073/0.107/0.019 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 818ms,rtt min/avg/max/mdev = 0.046/0.073/0.107/0.019 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy13
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[25.47491468],
       [ 1.8772435 ]]), 'worker-node2': array([[19.26545123],
       [ 0.34211366]]), 'worker-node3': array([[19.52700468],
       [ 1.17357547]]), 'worker-node4': array([[24.6917351 ],
       [ 4.41868691]])}
Test complete.
Process with id: 13 finished in 16.76476817799994 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.1
+ echo master-automation,9.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.4
+ echo worker-node1,9.4
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node3,3.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.4
+ echo worker-node4,9.4
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 259.365/259.402/259.472/0.037 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 259.365/259.402/259.472/0.037 ms, pipe 2'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.128.0.35 ip_address
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.332/109.376/109.428/0.031 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.332/109.376/109.428/0.031 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.937/198.952/198.963/0.010 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 198.937/198.952/198.963/0.010 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ tail -n 2
++ tail -1
++ ping -c 5 -i 0.2 -q 10.152.0.33
+ metric_rtt='rtt min/avg/max/mdev = 278.645/278.688/278.744/0.038 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 278.645/278.688/278.744/0.038 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 814ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.071/0.077/0.087/0.006 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 814ms,rtt min/avg/max/mdev = 0.071/0.077/0.087/0.006 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy14
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[26.92770976],
       [ 4.52624341]]), 'worker-node2': array([[20.69338649],
       [ 1.44368132]]), 'worker-node3': array([[20.31573803],
       [ 1.17957733]]), 'worker-node4': array([[24.31759532],
       [ 3.12140411]])}
Test complete.
Process with id: 14 finished in 13.647909547999006 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo master-automation,6.2
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node2,6.2
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node3,6.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node4,6.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ tail -n 2
++ tail -1
++ ping -c 5 -i 0.2 -q 10.140.0.33
+ metric_rtt='rtt min/avg/max/mdev = 259.357/259.416/259.506/0.051 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 259.357/259.416/259.506/0.051 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.280/109.297/109.345/0.024 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.280/109.297/109.345/0.024 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ tail -1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.158.0.33
+ metric_rtt='rtt min/avg/max/mdev = 198.904/198.987/199.099/0.064 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.904/198.987/199.099/0.064 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 807ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.659/278.709/278.737/0.028 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 807ms,rtt min/avg/max/mdev = 278.659/278.709/278.737/0.028 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 826ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.078/0.093/0.108/0.010 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 826ms,rtt min/avg/max/mdev = 0.078/0.093/0.108/0.010 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy15
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[25.15082125],
       [ 2.01404836]]), 'worker-node2': array([[19.18333977],
       [ 0.52858102]]), 'worker-node3': array([[19.55730269],
       [ 1.31020516]]), 'worker-node4': array([[23.61038094],
       [ 2.73336303]])}
Test complete.
Process with id: 15 finished in 17.75240578699959 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo master-automation,3.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node3,3.2
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.9
+ echo worker-node4,5.9
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 808ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.352/259.423/259.485/0.053 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 808ms,rtt min/avg/max/mdev = 259.352/259.423/259.485/0.053 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.291/109.319/109.355/0.027 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.291/109.319/109.355/0.027 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.892/198.980/199.043/0.057 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.892/198.980/199.043/0.057 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.672/278.770/278.888/0.076 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 278.672/278.770/278.888/0.076 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 822ms'
++ tail -n 2
++ tail -1
++ ping -c 5 -i 0.2 -q 10.156.0.38
+ metric_rtt='rtt min/avg/max/mdev = 0.058/0.074/0.105/0.016 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 822ms,rtt min/avg/max/mdev = 0.058/0.074/0.105/0.016 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy16
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.64220485],
       [ 1.84237682]]), 'worker-node2': array([[18.13985071],
       [-0.63295228]]), 'worker-node3': array([[18.24439493],
       [ 0.13941908]]), 'worker-node4': array([[22.46132116],
       [ 2.05732638]])}
Test complete.
Process with id: 16 finished in 13.125498174998938 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.9
+ echo master-automation,5.9
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node1,3.2
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.9
+ echo worker-node3,5.9
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.7
+ echo worker-node4,9.7
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ awk -F, '{print $2}'
++ grep 10.140.0.33 ip_address
+ dest_name=worker-node1
++ tail -n 2
++ head -1
++ ping -c 5 -i 0.2 -q 10.140.0.33
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.363/259.389/259.460/0.035 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.363/259.389/259.460/0.035 ms, pipe 2'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.128.0.35 ip_address
+ dest_name=worker-node2
++ head -1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.128.0.35
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.251/109.320/109.398/0.049 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.251/109.320/109.398/0.049 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 198.890/198.974/199.080/0.062 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.890/198.974/199.080/0.062 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 808ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.413/278.505/278.645/0.080 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 808ms,rtt min/avg/max/mdev = 278.413/278.505/278.645/0.080 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 823ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.039/0.061/0.070/0.011 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 823ms,rtt min/avg/max/mdev = 0.039/0.061/0.070/0.011 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy17
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.16774436],
       [ 2.10547041]]), 'worker-node2': array([[18.35829027],
       [ 0.16068129]]), 'worker-node3': array([[18.97220068],
       [ 1.13111261]]), 'worker-node4': array([[23.6406707 ],
       [ 3.31181081]])}
Test complete.
Process with id: 17 finished in 17.14019289600037 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=8.8
+ echo master-automation,8.8
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ awk -F, '{print $2}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node2,3.2
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.4
+ echo worker-node4,9.4
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.415/259.432/259.478/0.023 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 259.415/259.432/259.478/0.023 ms, pipe 2'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.128.0.35 ip_address
+ dest_name=worker-node2
++ head -1
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 109.342/109.416/109.475/0.049 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.342/109.416/109.475/0.049 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 198.944/198.998/199.037/0.032 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 198.944/198.998/199.037/0.032 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.460/278.542/278.634/0.056 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 278.460/278.542/278.634/0.056 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 813ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.056/0.075/0.089/0.011 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 813ms,rtt min/avg/max/mdev = 0.056/0.075/0.089/0.011 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy18
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.87915546],
       [ 2.22922257]]), 'worker-node2': array([[18.78421928],
       [ 0.17246224]]), 'worker-node3': array([[18.87001174],
       [ 0.58332674]]), 'worker-node4': array([[23.34601391],
       [ 2.90163423]])}
Test complete.
Process with id: 18 finished in 16.02636192600039 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo master-automation,6.2
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=12.5
+ echo worker-node2,12.5
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.5
+ echo worker-node4,6.5
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.378/259.459/259.547/0.069 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.378/259.459/259.547/0.069 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.295/109.392/109.562/0.098 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.295/109.392/109.562/0.098 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ head -1
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 198.953/198.977/199.018/0.023 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.953/198.977/199.018/0.023 ms'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.152.0.33 ip_address
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.484/278.523/278.571/0.028 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 278.484/278.523/278.571/0.028 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 814ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.058/0.077/0.092/0.011 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 814ms,rtt min/avg/max/mdev = 0.058/0.077/0.092/0.011 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy19
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.57332955],
       [ 1.9901707 ]]), 'worker-node2': array([[19.61510089],
       [ 1.7159868 ]]), 'worker-node3': array([[19.88273176],
       [ 1.51931142]]), 'worker-node4': array([[23.88277129],
       [ 2.88461285]])}
Test complete.
Process with id: 19 finished in 17.399718313998164 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.4
+ echo master-automation,9.4
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node1,6.2
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=34.4
+ echo worker-node2,34.4
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=12.5
+ echo worker-node4,12.5
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.449/259.502/259.577/0.045 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 259.449/259.502/259.577/0.045 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.280/109.335/109.398/0.043 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.280/109.335/109.398/0.043 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 199.203/199.249/199.294/0.037 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 199.203/199.249/199.294/0.037 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.455/278.642/279.093/0.233 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 278.455/278.642/279.093/0.233 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 814ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.061/0.075/0.088/0.010 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 814ms,rtt min/avg/max/mdev = 0.061/0.075/0.088/0.010 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy20
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[25.56193784],
       [ 3.02144747]]), 'worker-node2': array([[23.0523335 ],
       [ 6.20911622]]), 'worker-node3': array([[23.36492049],
       [ 4.11775998]]), 'worker-node4': array([[27.35314547],
       [ 5.27108696]])}
Test complete.
Process with id: 20 finished in 15.85817800699806 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo master-automation,3.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.1
+ echo worker-node2,9.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node4,0.0
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ awk -F, '{print $1}'
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $2}'
++ grep 10.140.0.33 ip_address
+ dest_name=worker-node1
++ tail -n 2
++ head -1
++ ping -c 5 -i 0.2 -q 10.140.0.33
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 807ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.403/259.457/259.528/0.044 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 807ms,rtt min/avg/max/mdev = 259.403/259.457/259.528/0.044 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.225/109.327/109.430/0.066 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.225/109.327/109.430/0.066 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 199.229/199.290/199.388/0.054 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 199.229/199.290/199.388/0.054 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 809ms'
++ tail -1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.152.0.33
+ metric_rtt='rtt min/avg/max/mdev = 278.439/278.479/278.538/0.043 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 809ms,rtt min/avg/max/mdev = 278.439/278.479/278.538/0.043 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 823ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.051/0.065/0.089/0.012 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 823ms,rtt min/avg/max/mdev = 0.051/0.065/0.089/0.012 ms'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ awk -F, '{print $3}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy21
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[27.52214699],
       [ 3.0786358 ]]), 'worker-node2': array([[21.13727113],
       [ 1.46466457]]), 'worker-node3': array([[20.57675716],
       [ 1.15892109]]), 'worker-node4': array([[23.34261022],
       [ 1.38760653]])}
Test complete.
Process with id: 21 finished in 16.468188964998262 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo master-automation,6.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.4
+ echo worker-node1,9.4
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node2,6.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node3,6.2
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.9
+ echo worker-node4,5.9
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.448/259.518/259.670/0.079 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 259.448/259.518/259.670/0.079 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.347/109.401/109.538/0.070 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.347/109.401/109.538/0.070 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 199.214/199.320/199.371/0.058 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 199.214/199.320/199.371/0.058 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.507/278.679/279.063/0.198 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 278.507/278.679/279.063/0.198 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 817ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.054/0.079/0.107/0.020 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 817ms,rtt min/avg/max/mdev = 0.054/0.079/0.107/0.020 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy22
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[25.08637232],
       [ 2.6530169 ]]), 'worker-node2': array([[19.38774483],
       [ 0.95157491]]), 'worker-node3': array([[19.84965393],
       [ 1.59152703]]), 'worker-node4': array([[23.83082935],
       [ 2.83191481]])}
Test complete.
Process with id: 22 finished in 13.034427841997967 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.5
+ echo master-automation,6.5
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ awk -F, '{print $3}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.7
+ echo worker-node2,5.7
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=18.8
+ echo worker-node3,18.8
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.5
+ echo worker-node4,6.5
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 812ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 259.460/259.498/259.567/0.039 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 812ms,rtt min/avg/max/mdev = 259.460/259.498/259.567/0.039 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.295/109.392/109.523/0.084 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.295/109.392/109.523/0.084 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 199.169/199.241/199.295/0.043 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 199.169/199.241/199.295/0.043 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.465/278.550/278.659/0.066 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 278.465/278.550/278.659/0.066 ms, pipe 2'
+ read -r dest_ip
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 818ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.058/0.067/0.097/0.015 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 818ms,rtt min/avg/max/mdev = 0.058/0.067/0.097/0.015 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ ipa=10.128.0.35
++ awk -F, '{print $2}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy23
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.79562199],
       [ 1.88165484]]), 'worker-node2': array([[18.89782785],
       [ 0.39604521]]), 'worker-node3': array([[20.84621295],
       [ 3.53543346]]), 'worker-node4': array([[25.1458866 ],
       [ 4.12335809]])}
Test complete.
Process with id: 23 finished in 14.064957366001181 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=12.5
+ echo master-automation,12.5
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=18.8
+ echo worker-node2,18.8
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=16.1
+ echo worker-node3,16.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node4,6.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.437/260.485/264.376/1.945 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 259.437/260.485/264.376/1.945 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.285/109.402/109.561/0.103 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.285/109.402/109.561/0.103 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 199.199/199.256/199.410/0.077 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 199.199/199.256/199.410/0.077 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.476/278.482/278.488/0.004 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 278.476/278.482/278.488/0.004 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 816ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.047/0.063/0.082/0.012 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 816ms,rtt min/avg/max/mdev = 0.047/0.063/0.082/0.012 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy24
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[26.00377649],
       [ 2.59730727]]), 'worker-node2': array([[21.30810761],
       [ 3.07218733]]), 'worker-node3': array([[22.78545704],
       [ 4.55130788]]), 'worker-node4': array([[26.48515613],
       [ 4.50725557]])}
Test complete.
Process with id: 24 finished in 18.582923873000254 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=58.3
+ echo master-automation,58.3
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=19.4
+ echo worker-node1,19.4
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node3,6.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.1
+ echo worker-node4,9.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.451/259.490/259.542/0.034 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 259.451/259.490/259.542/0.034 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.307/109.392/109.471/0.060 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.307/109.392/109.471/0.060 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 199.149/199.258/199.394/0.078 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 199.149/199.258/199.394/0.078 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.470/278.543/278.585/0.038 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 278.470/278.543/278.585/0.038 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 816ms'
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.042/0.059/0.072/0.010 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 816ms,rtt min/avg/max/mdev = 0.042/0.059/0.072/0.010 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy25
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[29.04043796],
       [ 6.14973249]]), 'worker-node2': array([[22.39192583],
       [ 2.27045893]]), 'worker-node3': array([[21.87122711],
       [ 2.0799947 ]]), 'worker-node4': array([[25.4136278 ],
       [ 3.47543163]])}
Test complete.
Process with id: 25 finished in 18.19928231799713 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo master-automation,6.2
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.1
+ echo worker-node3,9.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=11.8
+ echo worker-node4,11.8
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 259.441/259.481/259.519/0.028 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 259.441/259.481/259.519/0.028 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.303/109.346/109.436/0.049 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.303/109.346/109.436/0.049 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 199.173/199.248/199.370/0.066 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 199.173/199.248/199.370/0.066 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.441/278.535/278.640/0.064 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 278.441/278.535/278.640/0.064 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 818ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.045/0.080/0.127/0.032 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 818ms,rtt min/avg/max/mdev = 0.045/0.080/0.127/0.032 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy26
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[25.84790014],
       [ 2.11395261]]), 'worker-node2': array([[19.21939141],
       [-0.04776938]]), 'worker-node3': array([[19.71516056],
       [ 1.45692   ]]), 'worker-node4': array([[24.38907876],
       [ 3.81355997]])}
Test complete.
Process with id: 26 finished in 13.55537264799932 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo master-automation,6.2
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node1,3.1
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.5
+ echo worker-node2,6.5
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node3,3.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node4,3.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.461/259.505/259.534/0.024 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 259.461/259.505/259.534/0.024 ms, pipe 2'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.128.0.35 ip_address
+ dest_name=worker-node2
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.329/109.375/109.432/0.033 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.329/109.375/109.432/0.033 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 199.209/199.230/199.283/0.026 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 199.209/199.230/199.283/0.026 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 807ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.433/278.502/278.568/0.044 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 807ms,rtt min/avg/max/mdev = 278.433/278.502/278.568/0.044 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 819ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.044/0.064/0.078/0.012 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 819ms,rtt min/avg/max/mdev = 0.044/0.064/0.078/0.012 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy27
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[25.81555904],
       [ 3.02874325]]), 'worker-node2': array([[19.94843102],
       [ 1.18356929]]), 'worker-node3': array([[19.84885159],
       [ 1.10225513]]), 'worker-node4': array([[23.32218057],
       [ 2.01584115]])}
Test complete.
Process with id: 27 finished in 15.346716888001538 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo master-automation,6.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.5
+ echo worker-node1,6.5
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node2,3.2
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.4
+ echo worker-node3,9.4
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=17.6
+ echo worker-node4,17.6
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.463/259.515/259.574/0.040 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.463/259.515/259.574/0.040 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.312/109.365/109.423/0.047 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.312/109.365/109.423/0.047 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 199.148/199.200/199.285/0.046 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 199.148/199.200/199.285/0.046 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ tail -n 2
++ tail -1
++ ping -c 5 -i 0.2 -q 10.152.0.33
+ metric_rtt='rtt min/avg/max/mdev = 278.477/278.534/278.640/0.056 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 278.477/278.534/278.640/0.056 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 813ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.035/0.056/0.073/0.013 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 813ms,rtt min/avg/max/mdev = 0.035/0.056/0.073/0.013 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy28
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.97941242],
       [ 2.56025373]]), 'worker-node2': array([[18.95960022],
       [ 0.38260722]]), 'worker-node3': array([[19.77987759],
       [ 1.83389461]]), 'worker-node4': array([[25.23921686],
       [ 5.09897377]])}
Test complete.
Process with id: 28 finished in 18.60948253300012 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=18.8
+ echo master-automation,18.8
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node1,3.2
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.4
+ echo worker-node3,9.4
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node4,3.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.446/259.502/259.601/0.059 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.446/259.502/259.601/0.059 ms, pipe 2'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.128.0.35 ip_address
+ dest_name=worker-node2
++ head -1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.128.0.35
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.292/109.312/109.327/0.011 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.292/109.312/109.327/0.011 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 199.170/199.258/199.310/0.048 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 199.170/199.258/199.310/0.048 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.446/278.498/278.576/0.044 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 278.446/278.498/278.576/0.044 ms, pipe 2'
+ read -r dest_ip
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 818ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.045/0.073/0.092/0.015 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 818ms,rtt min/avg/max/mdev = 0.045/0.073/0.092/0.015 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy29
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[26.75184499],
       [ 3.80610042]]), 'worker-node2': array([[19.96584145],
       [ 0.4237025 ]]), 'worker-node3': array([[20.31124582],
       [ 1.73386642]]), 'worker-node4': array([[23.78759534],
       [ 2.36535945]])}
Test complete.
Process with id: 29 finished in 16.090810399000475 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.1
+ echo master-automation,9.1
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.4
+ echo worker-node1,9.4
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ ipa=10.128.0.35
++ awk -F, '{print $2}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node2,3.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node3,0.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=11.8
+ echo worker-node4,11.8
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ tail -1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.460/259.479/259.497/0.013 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 259.460/259.479/259.497/0.013 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.320/109.418/109.522/0.077 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.320/109.418/109.522/0.077 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 199.107/199.198/199.251/0.048 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 199.107/199.198/199.251/0.048 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 807ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 278.466/278.532/278.586/0.043 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 807ms,rtt min/avg/max/mdev = 278.466/278.532/278.586/0.043 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 819ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.046/0.062/0.090/0.014 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 819ms,rtt min/avg/max/mdev = 0.046/0.062/0.090/0.014 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ awk -F, '{print $3}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy30
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[25.68526457],
       [ 3.25600616]]), 'worker-node2': array([[19.56460446],
       [ 0.72710495]]), 'worker-node3': array([[19.12908709],
       [ 0.30516508]]), 'worker-node4': array([[23.64986494],
       [ 3.11059576]])}
Test complete.
Process with id: 30 finished in 17.764016185999935 seconds
Total execution time: 1226.228846328002 seconds
error: Unable to delete action 'hellopy0': The requested resource does not exist. (code M9XgmhUuIh8TYhFXCBBIbTNozXP3VZ74)
Run 'wsk --help' for usage.
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy27
Process Process-28:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy7
error: Unable to delete action 'hellopy36': The requested resource does not exist. (code rrlROjtSvrZQfGpGohFTUaXBFIsl6chB)
Run 'wsk --help' for usage.
Process Process-8:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-37:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy32': The requested resource does not exist. (code ICkwb5lpT3dJo0eEaRskGFN8yOA1kogo)
Run 'wsk --help' for usage.
Process Process-33:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy38': The requested resource does not exist. (code lzWS9XyjdxS6xXU5badToCzuHHs5OYKB)
Run 'wsk --help' for usage.
Process Process-39:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy1
ok: deleted action hellopy18
ok: deleted action hellopy12
Process Process-2:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy3
Process Process-13:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy6
ok: deleted action hellopy16
error: Unable to delete action 'hellopy34': The requested resource does not exist. (code sLpsRJ4ApYr8bjgLEHsoDt0s4rK7TtcZ)
Run 'wsk --help' for usage.
ok: deleted action hellopy19
ok: deleted action hellopy8
ok: deleted action hellopy5
ok: deleted action hellopy10
ok: deleted action hellopy30
ok: deleted action hellopy15
ok: deleted action hellopy2
ok: deleted action hellopy21
Process Process-31:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy47': The requested resource does not exist. (code cht939CCZbwxmUjqhlse1Wt15F58qhb1)
Run 'wsk --help' for usage.
Process Process-4:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-19:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-16:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-6:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-3:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-11:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-48:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-20:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy46': The requested resource does not exist. (code eFiWrn4EV1p3xZStr4zI09Snzccqm52B)
Run 'wsk --help' for usage.
Process Process-9:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-7:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-47:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-22:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-35:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-17:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy49': The requested resource does not exist. (code rIf3EAgygqTKuZje2Y2YUHlXyhSRwL78)
Run 'wsk --help' for usage.
Process Process-50:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy43': The requested resource does not exist. (code hIZkFX9QQ3jRD5QaZUVYvsHbERbYSmqG)
Run 'wsk --help' for usage.
Process Process-44:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy41': The requested resource does not exist. (code ZZIF9y6QaaGDAETM1EIymKxSCoGJnoJw)
Run 'wsk --help' for usage.
Process Process-42:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy44': The requested resource does not exist. (code RYfxwnIm47e1A1XOUdcOXeuAvhDiqKGs)
Run 'wsk --help' for usage.
Process Process-45:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy39': The requested resource does not exist. (code xWYnSm1swgphxo52XI3etQ9AWD2jtgaw)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy37': The requested resource does not exist. (code nUin7rxBzrRxXV9j1UC4eRMQa2LS7DJo)
Run 'wsk --help' for usage.
Process Process-40:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-38:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy40': The requested resource does not exist. (code aHPexs6JoXWk6tQk6WgpRCmIv4lEcxIe)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy48': The requested resource does not exist. (code U1YDXYkGWr2fAiihZcN8tCkb02KR7RE1)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy45': The requested resource does not exist. (code hoAhzr0AiOEbKxBaqGbVTqMubuX5Jbdo)
Run 'wsk --help' for usage.
Process Process-49:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy33': The requested resource does not exist. (code N9SUm4K3bgdBitZRyQMNCrqF4v2OAnmF)
Run 'wsk --help' for usage.
Process Process-41:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy42': The requested resource does not exist. (code V9We0NPMN64gAXC91VwfD37N7zOGhu0L)
Run 'wsk --help' for usage.
Process Process-34:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-46:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-43:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy35': The requested resource does not exist. (code 6pGwYyY3YX040nmAdWzP7mgL2DXdW487)
Run 'wsk --help' for usage.
Process Process-36:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy31': The requested resource does not exist. (code uVKikgL5xMgM2s1M2C8xaHwX8SeZPIlp)
Run 'wsk --help' for usage.
Process Process-32:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy22
Process Process-23:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy23
ok: deleted action hellopy29
Process Process-24:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-30:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy17
Process Process-18:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy14
ok: deleted action hellopy4
ok: deleted action hellopy28
Process Process-29:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-15:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-5:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy9
ok: deleted action hellopy24
ok: deleted action hellopy11
ok: deleted action hellopy13
ok: deleted action hellopy25
ok: deleted action hellopy20
ok: deleted action hellopy26
Process Process-26:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-12:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-14:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-27:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-21:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-10:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-25:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo master-automation,3.2
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node3,3.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node4,6.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ awk -F, '{print $2}'
++ grep 10.140.0.33 ip_address
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.856/259.930/260.001/0.046 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.856/259.930/260.001/0.046 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.641/109.662/109.689/0.015 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.641/109.662/109.689/0.015 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.923/198.979/199.070/0.051 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.923/198.979/199.070/0.051 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.558/278.599/278.641/0.031 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 278.558/278.599/278.641/0.031 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 818ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.041/0.074/0.115/0.026 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 818ms,rtt min/avg/max/mdev = 0.041/0.074/0.115/0.026 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy1
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.82911985],
       [ 2.09795385]]), 'worker-node2': array([[18.34813126],
       [-0.4802491 ]]), 'worker-node3': array([[18.38571032],
       [ 0.1801032 ]]), 'worker-node4': array([[22.57612405],
       [ 2.11852303]])}
Test complete.
Process with id: 1 finished in 19.22002632099975 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.9
+ echo master-automation,5.9
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node1,6.1
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node3,0.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node4,3.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 807ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.884/259.905/259.933/0.016 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 807ms,rtt min/avg/max/mdev = 259.884/259.905/259.933/0.016 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.629/109.684/109.796/0.059 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.629/109.684/109.796/0.059 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 198.982/199.006/199.033/0.020 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.982/199.006/199.033/0.020 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.545/278.601/278.644/0.037 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 278.545/278.601/278.644/0.037 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 813ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.062/0.084/0.098/0.013 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 813ms,rtt min/avg/max/mdev = 0.062/0.084/0.098/0.013 ms'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy2
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[24.60920857],
       [ 2.65769141]]), 'worker-node2': array([[18.45093342],
       [-0.07394752]]), 'worker-node3': array([[18.24648577],
       [-0.0958235 ]]), 'worker-node4': array([[22.03999884],
       [ 1.3945984 ]])}
Test complete.
Process with id: 2 finished in 17.686094469998352 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo master-automation,6.1
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.3
+ echo worker-node2,3.3
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=2.9
+ echo worker-node3,2.9
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node4,3.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.832/259.910/259.976/0.053 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.832/259.910/259.976/0.053 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.625/109.699/109.776/0.056 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.625/109.699/109.776/0.056 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.903/199.001/199.113/0.069 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 198.903/199.001/199.113/0.069 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.535/278.593/278.623/0.033 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 278.535/278.593/278.623/0.033 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 817ms'
++ tail -n 2
++ tail -1
++ ping -c 5 -i 0.2 -q 10.156.0.38
+ metric_rtt='rtt min/avg/max/mdev = 0.057/0.067/0.077/0.008 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 817ms,rtt min/avg/max/mdev = 0.057/0.067/0.077/0.008 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy3
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[23.35144811],
       [ 1.14446898]]), 'worker-node2': array([[17.61483072],
       [-0.34381882]]), 'worker-node3': array([[18.05332929],
       [ 0.34817911]]), 'worker-node4': array([[22.11086808],
       [ 1.71898421]])}
Test complete.
Process with id: 3 finished in 17.34688332099904 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo master-automation,3.2
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node1,6.1
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node3,0.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.3
+ echo worker-node4,3.3
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ tail -n 2
++ tail -1
++ ping -c 5 -i 0.2 -q 10.140.0.33
+ metric_rtt='rtt min/avg/max/mdev = 259.845/259.919/260.032/0.077 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 259.845/259.919/260.032/0.077 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.643/109.688/109.727/0.030 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.643/109.688/109.727/0.030 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 199.008/199.024/199.042/0.013 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 199.008/199.024/199.042/0.013 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.533/278.629/278.699/0.056 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 278.533/278.629/278.699/0.056 ms, pipe 2'
+ read -r dest_ip
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 812ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.043/0.063/0.089/0.017 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 812ms,rtt min/avg/max/mdev = 0.043/0.063/0.089/0.017 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy4
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[24.2198822 ],
       [ 2.44744985]]), 'worker-node2': array([[18.17223423],
       [-0.16617131]]), 'worker-node3': array([[18.06992938],
       [-0.12231317]]), 'worker-node4': array([[21.96430605],
       [ 1.43540597]])}
Test complete.
Process with id: 4 finished in 18.49366848799764 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo master-automation,6.2
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node1,3.1
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ awk -F, '{print $2}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=12.5
+ echo worker-node2,12.5
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=12.1
+ echo worker-node3,12.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node4,3.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ awk -F, '{print $2}'
++ grep 10.140.0.33 ip_address
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.847/259.871/259.927/0.029 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 259.847/259.871/259.927/0.029 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.620/109.725/109.909/0.103 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.620/109.725/109.909/0.103 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.910/198.950/198.974/0.023 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.910/198.950/198.974/0.023 ms'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.152.0.33 ip_address
+ dest_name=worker-node4
++ tail -n 2
++ head -1
++ ping -c 5 -i 0.2 -q 10.152.0.33
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 807ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 278.455/278.518/278.574/0.049 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 807ms,rtt min/avg/max/mdev = 278.455/278.518/278.574/0.049 ms, pipe 2'
+ read -r dest_ip
++ tail -n 2
++ head -1
++ ping -c 5 -i 0.2 -q 10.156.0.38
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 816ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.069/0.088/0.101/0.011 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 816ms,rtt min/avg/max/mdev = 0.069/0.088/0.101/0.011 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy5
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[23.6864682 ],
       [ 1.73663078]]), 'worker-node2': array([[19.08082019],
       [ 1.6618558 ]]), 'worker-node3': array([[20.63286102],
       [ 3.16308792]]), 'worker-node4': array([[24.49877947],
       [ 3.28964498]])}
Test complete.
Process with id: 5 finished in 11.744464996998431 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo master-automation,0.0
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node1,3.1
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node2,6.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node3,6.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.6
+ echo worker-node4,5.6
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ awk -F, '{print $2}'
++ grep 10.140.0.33 ip_address
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.866/259.904/259.963/0.036 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 259.866/259.904/259.963/0.036 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.632/109.709/109.902/0.098 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.632/109.709/109.902/0.098 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.948/198.994/199.065/0.050 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.948/198.994/199.065/0.050 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ head -1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.152.0.33
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.442/278.481/278.535/0.034 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 278.442/278.481/278.535/0.034 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 816ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.060/0.092/0.121/0.019 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 816ms,rtt min/avg/max/mdev = 0.060/0.092/0.121/0.019 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ awk -F, '{print $3}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy6
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[25.6890117 ],
       [ 2.66558617]]), 'worker-node2': array([[19.71355416],
       [ 0.886707  ]]), 'worker-node3': array([[19.964857  ],
       [ 1.48443335]]), 'worker-node4': array([[23.80499841],
       [ 2.68884574]])}
Test complete.
Process with id: 6 finished in 11.7859938540023 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo master-automation,6.2
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node1,3.2
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ awk -F, '{print $2}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node3,6.2
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node4,6.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 807ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.835/259.895/259.996/0.055 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 807ms,rtt min/avg/max/mdev = 259.835/259.895/259.996/0.055 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.542/109.632/109.729/0.062 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.542/109.632/109.729/0.062 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ head -1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.158.0.33
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.943/198.993/199.049/0.035 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.943/198.993/199.049/0.035 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 278.458/278.520/278.654/0.068 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 278.458/278.520/278.654/0.068 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 816ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.053/0.073/0.089/0.011 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 816ms,rtt min/avg/max/mdev = 0.053/0.073/0.089/0.011 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy7
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[25.1168126 ],
       [ 2.36626108]]), 'worker-node2': array([[18.59604463],
       [-0.33614305]]), 'worker-node3': array([[18.93918619],
       [ 0.81924041]]), 'worker-node4': array([[23.0991208 ],
       [ 2.47854196]])}
Test complete.
Process with id: 7 finished in 17.841358345001936 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo master-automation,0.0
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=20.0
+ echo worker-node1,20.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.1
+ echo worker-node3,9.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=12.5
+ echo worker-node4,12.5
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 810ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 259.869/259.905/259.956/0.028 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 810ms,rtt min/avg/max/mdev = 259.869/259.905/259.956/0.028 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 109.647/109.693/109.746/0.042 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.647/109.693/109.746/0.042 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.900/198.936/198.983/0.028 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.900/198.936/198.983/0.028 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.488/278.538/278.563/0.026 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 278.488/278.538/278.563/0.026 ms, pipe 2'
+ read -r dest_ip
++ head -1
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 813ms'
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.060/0.079/0.107/0.017 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 813ms,rtt min/avg/max/mdev = 0.060/0.079/0.107/0.017 ms'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy8
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[26.62658832],
       [ 5.32436084]]), 'worker-node2': array([[20.85904186],
       [ 2.02474382]]), 'worker-node3': array([[21.32950085],
       [ 2.64349401]]), 'worker-node4': array([[25.74714328],
       [ 4.53418506]])}
Test complete.
Process with id: 8 finished in 17.42411533699851 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.5
+ echo master-automation,6.5
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=2.9
+ echo worker-node2,2.9
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node3,3.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.9
+ echo worker-node4,5.9
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 259.888/259.953/260.028/0.044 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 259.888/259.953/260.028/0.044 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.613/109.664/109.720/0.042 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.613/109.664/109.720/0.042 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.931/198.987/199.084/0.056 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.931/198.987/199.084/0.056 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ tail -1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.152.0.33
+ metric_rtt='rtt min/avg/max/mdev = 278.431/278.516/278.608/0.062 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 278.431/278.516/278.608/0.062 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 812ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.056/0.088/0.130/0.024 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 812ms,rtt min/avg/max/mdev = 0.056/0.088/0.130/0.024 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy9
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[26.44368394],
       [ 2.79179883]]), 'worker-node2': array([[19.77323519],
       [ 0.30176292]]), 'worker-node3': array([[19.41163309],
       [ 0.52634309]]), 'worker-node4': array([[23.19306854],
       [ 2.16665285]])}
Test complete.
Process with id: 9 finished in 18.08134348100066 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo master-automation,6.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.4
+ echo worker-node3,9.4
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.5
+ echo worker-node4,6.5
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ awk -F, '{print $2}'
++ grep 10.140.0.33 ip_address
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.828/259.912/260.053/0.078 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 259.828/259.912/260.053/0.078 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.620/109.654/109.723/0.036 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.620/109.654/109.723/0.036 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.945/198.989/199.064/0.042 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 198.945/198.989/199.064/0.042 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 807ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.423/278.498/278.627/0.072 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 807ms,rtt min/avg/max/mdev = 278.423/278.498/278.627/0.072 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 818ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.044/0.071/0.106/0.020 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 818ms,rtt min/avg/max/mdev = 0.044/0.071/0.106/0.020 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ awk -F, '{print $3}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy10
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.23458895],
       [ 1.51864173]]), 'worker-node2': array([[17.82319196],
       [-0.79563875]]), 'worker-node3': array([[18.74065827],
       [ 1.18088092]]), 'worker-node4': array([[23.16996042],
       [ 2.80158237]])}
Test complete.
Process with id: 10 finished in 12.973754750000808 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=47.1
+ echo master-automation,47.1
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.3
+ echo worker-node1,3.3
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.7
+ echo worker-node2,6.7
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=2.9
+ echo worker-node3,2.9
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=8.8
+ echo worker-node4,8.8
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.854/259.900/259.956/0.032 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 259.854/259.900/259.956/0.032 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.634/109.703/109.821/0.063 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.634/109.703/109.821/0.063 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.981/199.025/199.101/0.042 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.981/199.025/199.101/0.042 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.414/278.447/278.477/0.023 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 278.414/278.447/278.477/0.023 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 819ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.045/0.076/0.104/0.026 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 819ms,rtt min/avg/max/mdev = 0.045/0.076/0.104/0.026 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy11
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.84793092],
       [ 2.54142839]]), 'worker-node2': array([[19.3065973 ],
       [ 1.01766152]]), 'worker-node3': array([[19.43742962],
       [ 1.05186096]]), 'worker-node4': array([[23.74056572],
       [ 3.03698882]])}
Test complete.
Process with id: 11 finished in 17.32117150400154 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo master-automation,6.1
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=11.8
+ echo worker-node4,11.8
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.846/259.891/259.966/0.040 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 259.846/259.891/259.966/0.040 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.544/109.626/109.734/0.062 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.544/109.626/109.734/0.062 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.950/198.997/199.046/0.030 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.950/198.997/199.046/0.030 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.467/278.544/278.652/0.065 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 278.467/278.544/278.652/0.065 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 814ms'
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.048/0.068/0.084/0.014 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 814ms,rtt min/avg/max/mdev = 0.048/0.068/0.084/0.014 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy12
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.84549452],
       [ 2.03621836]]), 'worker-node2': array([[18.33127893],
       [-0.52444526]]), 'worker-node3': array([[18.37263094],
       [ 0.17053506]]), 'worker-node4': array([[23.21322676],
       [ 3.11638887]])}
Test complete.
Process with id: 12 finished in 13.958691412000917 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo master-automation,6.2
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node2,6.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node3,3.2
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node4,3.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 807ms'
++ tail -n 2
++ tail -1
++ ping -c 5 -i 0.2 -q 10.140.0.33
+ metric_rtt='rtt min/avg/max/mdev = 259.862/259.920/259.956/0.034 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 807ms,rtt min/avg/max/mdev = 259.862/259.920/259.956/0.034 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.684/109.757/110.021/0.131 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.684/109.757/110.021/0.131 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.973/198.995/199.037/0.022 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.973/198.995/199.037/0.022 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.449/278.498/278.567/0.039 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 278.449/278.498/278.567/0.039 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 821ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.052/0.076/0.102/0.019 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 821ms,rtt min/avg/max/mdev = 0.052/0.076/0.102/0.019 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy13
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.60824968],
       [ 2.15748872]]), 'worker-node2': array([[18.97040487],
       [ 0.68212611]]), 'worker-node3': array([[19.17123105],
       [ 0.92160069]]), 'worker-node4': array([[22.90743498],
       [ 1.98030596]])}
Test complete.
Process with id: 13 finished in 15.927118834999419 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=14.7
+ echo master-automation,14.7
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node1,3.1
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ awk -F, '{print $2}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.9
+ echo worker-node2,5.9
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node3,3.2
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.4
+ echo worker-node4,9.4
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.803/259.871/259.926/0.047 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 259.803/259.871/259.926/0.047 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.650/109.666/109.687/0.015 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.650/109.666/109.687/0.015 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 198.926/198.996/199.041/0.043 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.926/198.996/199.041/0.043 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.424/278.467/278.529/0.035 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 278.424/278.467/278.529/0.035 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 814ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.043/0.061/0.080/0.012 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 814ms,rtt min/avg/max/mdev = 0.043/0.061/0.080/0.012 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy14
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.3756453 ],
       [ 1.98418989]]), 'worker-node2': array([[18.75829541],
       [ 0.55790781]]), 'worker-node3': array([[19.01564136],
       [ 0.86480833]]), 'worker-node4': array([[23.52452098],
       [ 3.07224936]])}
Test complete.
Process with id: 14 finished in 17.41327905900107 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.9
+ echo master-automation,5.9
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.5
+ echo worker-node3,6.5
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node4,6.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.877/259.937/260.024/0.059 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 259.877/259.937/260.024/0.059 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.657/109.687/109.715/0.025 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.657/109.687/109.715/0.025 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.912/198.976/199.090/0.063 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.912/198.976/199.090/0.063 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 278.432/278.480/278.548/0.038 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 278.432/278.480/278.548/0.038 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 819ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.055/0.086/0.117/0.020 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 819ms,rtt min/avg/max/mdev = 0.055/0.086/0.117/0.020 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy15
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.75086219],
       [ 2.08814172]]), 'worker-node2': array([[18.66534629],
       [ 0.07880092]]), 'worker-node3': array([[19.16718778],
       [ 1.14414327]]), 'worker-node4': array([[23.33778551],
       [ 2.66836911]])}
Test complete.
Process with id: 15 finished in 17.628792065002926 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo master-automation,6.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.1
+ echo worker-node2,9.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node3,6.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=12.1
+ echo worker-node4,12.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 259.845/259.896/259.923/0.028 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 259.845/259.896/259.923/0.028 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.671/109.715/109.765/0.034 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 109.671/109.715/109.765/0.034 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.930/198.993/199.076/0.049 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.930/198.993/199.076/0.049 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.465/278.497/278.524/0.020 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 278.465/278.497/278.524/0.020 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 818ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.062/0.078/0.099/0.012 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 818ms,rtt min/avg/max/mdev = 0.062/0.078/0.099/0.012 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy16
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.49944162],
       [ 1.83877574]]), 'worker-node2': array([[19.13937845],
       [ 1.0177913 ]]), 'worker-node3': array([[19.72214946],
       [ 1.64623528]]), 'worker-node4': array([[24.49812784],
       [ 3.99381356]])}
Test complete.
Process with id: 16 finished in 16.44397409099838 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo master-automation,3.2
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ awk -F, '{print $3}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node2,3.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node3,0.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.3
+ echo worker-node4,3.3
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 259.850/259.890/259.925/0.031 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 259.850/259.890/259.925/0.031 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 109.624/109.672/109.692/0.024 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.624/109.672/109.692/0.024 ms'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.158.0.33 ip_address
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 198.918/198.982/199.064/0.049 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 198.918/198.982/199.064/0.049 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 278.609/278.661/278.721/0.036 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 278.609/278.661/278.721/0.036 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 822ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.056/0.084/0.117/0.020 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 822ms,rtt min/avg/max/mdev = 0.056/0.084/0.117/0.020 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy17
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[25.59746128],
       [ 2.58561447]]), 'worker-node2': array([[19.2749016 ],
       [ 0.28856631]]), 'worker-node3': array([[18.8041192 ],
       [ 0.04350879]]), 'worker-node4': array([[22.40347395],
       [ 1.45402882]])}
Test complete.
Process with id: 17 finished in 16.41287322399876 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo master-automation,6.2
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node3,3.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node4,6.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.862/259.901/259.950/0.036 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.862/259.901/259.950/0.036 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 109.635/109.682/109.721/0.032 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.635/109.682/109.721/0.032 ms'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.158.0.33 ip_address
+ dest_name=worker-node3
++ head -1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.158.0.33
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.903/198.978/199.154/0.089 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 198.903/198.978/199.154/0.089 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 809ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.604/278.630/278.680/0.029 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 809ms,rtt min/avg/max/mdev = 278.604/278.630/278.680/0.029 ms, pipe 2'
+ read -r dest_ip
++ head -1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.156.0.38
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 822ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.052/0.075/0.102/0.016 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 822ms,rtt min/avg/max/mdev = 0.052/0.075/0.102/0.016 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy18
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[23.55909731],
       [ 1.13809667]]), 'worker-node2': array([[17.33455173],
       [-0.9660543 ]]), 'worker-node3': array([[17.6831547 ],
       [-0.01856925]]), 'worker-node4': array([[22.14333646],
       [ 2.0744101 ]])}
Test complete.
Process with id: 18 finished in 17.791212888998416 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo master-automation,3.0
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.1
+ echo worker-node4,9.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ awk -F, '{print $2}'
++ grep 10.140.0.33 ip_address
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.814/259.916/260.078/0.111 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 259.814/259.916/260.078/0.111 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.673/109.720/109.765/0.034 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.673/109.720/109.765/0.034 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.876/198.942/198.988/0.039 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.876/198.942/198.988/0.039 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ head -1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.152.0.33
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.497/278.579/278.653/0.052 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 278.497/278.579/278.653/0.052 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 823ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.055/0.075/0.105/0.016 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 823ms,rtt min/avg/max/mdev = 0.055/0.075/0.105/0.016 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy19
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[23.66425687],
       [ 1.59040293]]), 'worker-node2': array([[17.56275389],
       [-0.67360899]]), 'worker-node3': array([[17.92129838],
       [ 0.16727713]]), 'worker-node4': array([[22.67007453],
       [ 2.68847812]])}
Test complete.
Process with id: 19 finished in 12.969031614000414 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.5
+ echo master-automation,6.5
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.9
+ echo worker-node2,5.9
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=20.7
+ echo worker-node4,20.7
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.808/259.850/259.887/0.026 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 259.808/259.850/259.887/0.026 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.629/109.713/109.770/0.047 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.629/109.713/109.770/0.047 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.920/198.966/199.054/0.049 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 198.920/198.966/199.054/0.049 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.577/278.643/278.710/0.042 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 278.577/278.643/278.710/0.042 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 814ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.050/0.089/0.115/0.023 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 814ms,rtt min/avg/max/mdev = 0.050/0.089/0.115/0.023 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy20
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.16461703],
       [ 1.93705749]]), 'worker-node2': array([[18.63477175],
       [ 0.55356499]]), 'worker-node3': array([[18.93805581],
       [ 0.85938002]]), 'worker-node4': array([[24.80209171],
       [ 5.10503752]])}
Test complete.
Process with id: 20 finished in 14.799398192000808 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo master-automation,0.0
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=15.6
+ echo worker-node1,15.6
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node2,6.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=8.8
+ echo worker-node4,8.8
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ awk -F, '{print $2}'
++ grep 10.140.0.33 ip_address
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 260.021/260.107/260.188/0.054 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 260.021/260.107/260.188/0.054 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.646/109.751/109.951/0.104 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.646/109.751/109.951/0.104 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.914/198.976/199.050/0.045 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.914/198.976/199.050/0.045 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.596/278.627/278.650/0.021 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 278.596/278.627/278.650/0.021 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 818ms'
++ tail -1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.156.0.38
+ metric_rtt='rtt min/avg/max/mdev = 0.062/0.082/0.100/0.012 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 818ms,rtt min/avg/max/mdev = 0.062/0.082/0.100/0.012 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy21
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[27.99725048],
       [ 6.09460026]]), 'worker-node2': array([[22.20308277],
       [ 2.90804381]]), 'worker-node3': array([[21.65793242],
       [ 1.99389049]]), 'worker-node4': array([[25.24088553],
       [ 3.39174307]])}
Test complete.
Process with id: 21 finished in 16.21180575300241 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.5
+ echo master-automation,6.5
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node2,3.0
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node3,6.2
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.9
+ echo worker-node4,5.9
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ awk -F, '{print $2}'
++ grep 10.140.0.33 ip_address
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.792/259.820/259.864/0.024 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.792/259.820/259.864/0.024 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.574/109.721/109.828/0.084 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 109.574/109.721/109.828/0.084 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.947/198.980/199.045/0.039 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.947/198.980/199.045/0.039 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.561/278.612/278.667/0.035 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 278.561/278.612/278.667/0.035 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 817ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.042/0.074/0.105/0.021 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 817ms,rtt min/avg/max/mdev = 0.042/0.074/0.105/0.021 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy22
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[25.74293517],
       [ 2.0834258 ]]), 'worker-node2': array([[19.15930512],
       [-0.06854802]]), 'worker-node3': array([[19.32809496],
       [ 0.92788524]]), 'worker-node4': array([[23.30823517],
       [ 2.44958002]])}
Test complete.
Process with id: 22 finished in 16.87188540400166 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo master-automation,3.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node1,3.2
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ ipa=10.128.0.35
++ awk -F, '{print $2}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node2,3.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node3,0.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node4,6.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 259.823/259.891/260.000/0.058 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.823/259.891/260.000/0.058 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.651/109.702/109.773/0.042 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 109.651/109.702/109.773/0.042 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 198.921/198.958/198.990/0.026 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.921/198.958/198.990/0.026 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 809ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 278.574/278.602/278.642/0.023 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 809ms,rtt min/avg/max/mdev = 278.574/278.602/278.642/0.023 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 813ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.070/0.076/0.083/0.004 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 813ms,rtt min/avg/max/mdev = 0.070/0.076/0.083/0.004 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy23
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[24.77188145],
       [ 2.26806017]]), 'worker-node2': array([[18.73389898],
       [ 0.17986917]]), 'worker-node3': array([[18.48564794],
       [ 0.03889209]]), 'worker-node4': array([[22.57323892],
       [ 2.01044481]])}
Test complete.
Process with id: 23 finished in 17.613409027999296 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=12.5
+ echo master-automation,12.5
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ awk -F, '{print $3}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=2.9
+ echo worker-node3,2.9
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.5
+ echo worker-node4,6.5
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.810/259.880/259.984/0.059 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.810/259.880/259.984/0.059 ms, pipe 2'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.128.0.35 ip_address
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 109.612/109.694/109.856/0.084 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.612/109.694/109.856/0.084 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.937/198.999/199.095/0.058 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.937/198.999/199.095/0.058 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.596/278.635/278.706/0.039 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 278.596/278.635/278.706/0.039 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 814ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.047/0.073/0.089/0.013 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 814ms,rtt min/avg/max/mdev = 0.047/0.073/0.089/0.013 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy24
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[23.85740736],
       [ 1.4919122 ]]), 'worker-node2': array([[17.98218947],
       [-0.20967933]]), 'worker-node3': array([[18.29182729],
       [ 0.391841  ]]), 'worker-node4': array([[22.64560702],
       [ 2.32765342]])}
Test complete.
Process with id: 24 finished in 16.223100853003416 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo master-automation,3.2
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node3,0.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=8.8
+ echo worker-node4,8.8
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.852/259.885/259.947/0.033 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 259.852/259.885/259.947/0.033 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ tail -n 2
++ tail -1
++ ping -c 5 -i 0.2 -q 10.128.0.35
+ metric_rtt='rtt min/avg/max/mdev = 109.630/109.693/109.839/0.080 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.630/109.693/109.839/0.080 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.895/198.958/199.026/0.043 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.895/198.958/199.026/0.043 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 807ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 278.561/278.573/278.591/0.011 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 807ms,rtt min/avg/max/mdev = 278.561/278.573/278.591/0.011 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 813ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.041/0.067/0.083/0.014 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 813ms,rtt min/avg/max/mdev = 0.041/0.067/0.083/0.014 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ ipa=10.128.0.35
++ awk -F, '{print $2}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ name=worker-node2
++ awk -F, '{print $3}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy25
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[24.01577952],
       [ 1.69693327]]), 'worker-node2': array([[17.78151001],
       [-0.64685927]]), 'worker-node3': array([[17.68402354],
       [-0.39779497]]), 'worker-node4': array([[22.29801499],
       [ 2.28337405]])}
Test complete.
Process with id: 25 finished in 16.43751512000017 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo master-automation,6.2
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node3,6.2
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.4
+ echo worker-node4,9.4
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ tail -n 2
++ head -1
++ ping -c 5 -i 0.2 -q 10.140.0.33
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 259.850/259.892/259.922/0.023 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 259.850/259.892/259.922/0.023 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ head -1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.128.0.35
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.894/109.958/110.158/0.100 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.894/109.958/110.158/0.100 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.927/198.978/199.064/0.047 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.927/198.978/199.064/0.047 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ tail -n 2
++ head -1
++ ping -c 5 -i 0.2 -q 10.152.0.33
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 809ms'
++ tail -n 2
++ tail -1
++ ping -c 5 -i 0.2 -q 10.152.0.33
+ metric_rtt='rtt min/avg/max/mdev = 278.553/278.628/278.709/0.056 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 809ms,rtt min/avg/max/mdev = 278.553/278.628/278.709/0.056 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 815ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.049/0.079/0.118/0.025 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 815ms,rtt min/avg/max/mdev = 0.049/0.079/0.118/0.025 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy26
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[23.82193121],
       [ 1.71148585]]), 'worker-node2': array([[18.05979249],
       [-0.0538156 ]]), 'worker-node3': array([[18.77300283],
       [ 1.07816859]]), 'worker-node4': array([[23.48952907],
       [ 3.24916737]])}
Test complete.
Process with id: 26 finished in 16.12705145899963 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo master-automation,3.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node2,6.2
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node3,3.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=8.8
+ echo worker-node4,8.8
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.904/259.933/259.954/0.018 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.904/259.933/259.954/0.018 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 109.860/109.918/110.012/0.055 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.860/109.918/110.012/0.055 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 198.949/199.033/199.165/0.074 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.949/199.033/199.165/0.074 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 278.547/278.592/278.671/0.043 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 278.547/278.592/278.671/0.043 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 815ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.075/0.090/0.119/0.015 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 815ms,rtt min/avg/max/mdev = 0.075/0.090/0.119/0.015 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy27
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.80046671],
       [ 2.21202947]]), 'worker-node2': array([[19.10804102],
       [ 0.71420274]]), 'worker-node3': array([[19.23215486],
       [ 0.89030012]]), 'worker-node4': array([[23.58060318],
       [ 2.95577884]])}
Test complete.
Process with id: 27 finished in 15.747164036001777 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=2.9
+ echo master-automation,2.9
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=21.9
+ echo worker-node2,21.9
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node3,3.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=14.7
+ echo worker-node4,14.7
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 259.852/259.909/259.989/0.045 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 259.852/259.909/259.989/0.045 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.862/109.920/109.951/0.031 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.862/109.920/109.951/0.031 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.995/199.026/199.107/0.040 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.995/199.026/199.107/0.040 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.579/278.708/278.932/0.122 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 278.579/278.708/278.932/0.122 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 814ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.073/0.079/0.088/0.006 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 814ms,rtt min/avg/max/mdev = 0.073/0.079/0.088/0.006 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy28
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.73369107],
       [ 2.00200866]]), 'worker-node2': array([[20.81578761],
       [ 3.39374035]]), 'worker-node3': array([[21.12683437],
       [ 2.48162571]]), 'worker-node4': array([[25.8448169 ],
       [ 4.84687643]])}
Test complete.
Process with id: 28 finished in 17.413268947999313 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo master-automation,0.0
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.7
+ echo worker-node1,6.7
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node3,3.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node4,3.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.800/259.828/259.861/0.026 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 259.800/259.828/259.861/0.026 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.863/109.920/109.976/0.046 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.863/109.920/109.976/0.046 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.939/198.990/199.036/0.033 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.939/198.990/199.036/0.033 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ tail -n 2
++ head -1
++ ping -c 5 -i 0.2 -q 10.152.0.33
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 808ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.541/278.623/278.680/0.046 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 808ms,rtt min/avg/max/mdev = 278.541/278.623/278.680/0.046 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 814ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.055/0.070/0.102/0.017 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 814ms,rtt min/avg/max/mdev = 0.055/0.070/0.102/0.017 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy29
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[27.3849749 ],
       [ 4.18940197]]), 'worker-node2': array([[20.46227242],
       [ 0.6087679 ]]), 'worker-node3': array([[19.88045149],
       [ 0.6457299 ]]), 'worker-node4': array([[23.16918279],
       [ 1.70493406]])}
Test complete.
Process with id: 29 finished in 16.52292141200087 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.1
+ echo master-automation,9.1
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=8.6
+ echo worker-node4,8.6
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.772/259.834/259.881/0.038 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 259.772/259.834/259.881/0.038 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.823/109.908/109.986/0.053 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.823/109.908/109.986/0.053 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.949/199.082/199.313/0.129 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.949/199.082/199.313/0.129 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.554/278.596/278.727/0.065 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 278.554/278.596/278.727/0.065 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 814ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.054/0.071/0.100/0.017 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 814ms,rtt min/avg/max/mdev = 0.054/0.071/0.100/0.017 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ awk -F, '{print $3}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy30
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.04244773],
       [ 1.20900121]]), 'worker-node2': array([[17.97793567],
       [-0.42185825]]), 'worker-node3': array([[18.23546341],
       [ 0.28590134]]), 'worker-node4': array([[22.81834044],
       [ 2.639094  ]])}
Test complete.
Process with id: 30 finished in 11.9735381160026 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=2.9
+ echo master-automation,2.9
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node1,3.2
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node3,3.2
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.7
+ echo worker-node4,9.7
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 807ms'
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 259.819/259.836/259.869/0.016 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 807ms,rtt min/avg/max/mdev = 259.819/259.836/259.869/0.016 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.903/109.974/110.060/0.051 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 109.903/109.974/110.060/0.051 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.935/198.988/199.095/0.060 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.935/198.988/199.095/0.060 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ head -1
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.580/278.625/278.683/0.038 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 278.580/278.625/278.683/0.038 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 814ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.056/0.083/0.118/0.021 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 814ms,rtt min/avg/max/mdev = 0.056/0.083/0.118/0.021 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy31
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.59207634],
       [ 2.45793231]]), 'worker-node2': array([[18.73851797],
       [ 0.35210954]]), 'worker-node3': array([[18.92653649],
       [ 0.72827095]]), 'worker-node4': array([[23.46875184],
       [ 3.04700612]])}
Test complete.
Process with id: 31 finished in 16.146039274997747 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo master-automation,3.0
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node1,3.2
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ awk -F, '{print $2}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node3,3.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=8.8
+ echo worker-node4,8.8
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.797/259.872/259.970/0.078 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 259.797/259.872/259.970/0.078 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.822/109.910/109.952/0.046 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.822/109.910/109.952/0.046 ms'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.158.0.33 ip_address
+ dest_name=worker-node3
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 198.919/198.980/199.037/0.042 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.919/198.980/199.037/0.042 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ tail -n 2
++ tail -1
++ ping -c 5 -i 0.2 -q 10.152.0.33
+ metric_rtt='rtt min/avg/max/mdev = 278.600/278.622/278.644/0.018 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 278.600/278.622/278.644/0.018 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 819ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.039/0.066/0.089/0.020 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 819ms,rtt min/avg/max/mdev = 0.039/0.066/0.089/0.020 ms'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ awk -F, '{print $3}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy32
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[25.08124061],
       [ 2.65077235]]), 'worker-node2': array([[19.05879901],
       [ 0.41914152]]), 'worker-node3': array([[19.09190149],
       [ 0.6967253 ]]), 'worker-node4': array([[23.4364338 ],
       [ 2.84331592]])}
Test complete.
Process with id: 32 finished in 17.48669991299903 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=94.4
+ echo master-automation,94.4
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node2,3.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node3,0.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=18.8
+ echo worker-node4,18.8
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.817/259.875/259.952/0.047 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.817/259.875/259.952/0.047 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 109.316/109.373/109.514/0.072 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.316/109.373/109.514/0.072 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.958/199.012/199.155/0.072 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.958/199.012/199.155/0.072 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 807ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.571/278.644/278.780/0.071 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 807ms,rtt min/avg/max/mdev = 278.571/278.644/278.780/0.071 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 818ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.051/0.072/0.087/0.012 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 818ms,rtt min/avg/max/mdev = 0.051/0.072/0.087/0.012 ms'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy33
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[24.6156775 ],
       [ 1.94407528]]), 'worker-node2': array([[18.51575344],
       [-0.02278567]]), 'worker-node3': array([[18.29936044],
       [-0.06948045]]), 'worker-node4': array([[23.90092852],
       [ 4.21894707]])}
Test complete.
Process with id: 33 finished in 17.845332895001775 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=8.6
+ echo master-automation,8.6
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node3,3.2
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=12.1
+ echo worker-node4,12.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.742/259.814/259.910/0.056 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 259.742/259.814/259.910/0.056 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.293/109.344/109.406/0.045 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.293/109.344/109.406/0.045 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 198.920/198.956/198.988/0.026 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.920/198.956/198.988/0.026 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ tail -n 2
++ tail -1
++ ping -c 5 -i 0.2 -q 10.152.0.33
+ metric_rtt='rtt min/avg/max/mdev = 278.619/278.667/278.769/0.056 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 278.619/278.667/278.769/0.056 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 815ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.057/0.065/0.074/0.006 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 815ms,rtt min/avg/max/mdev = 0.057/0.065/0.074/0.006 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy34
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[25.37562176],
       [ 2.81299364]]), 'worker-node2': array([[18.88593626],
       [-0.07085884]]), 'worker-node3': array([[18.83860354],
       [ 0.42346342]]), 'worker-node4': array([[23.58779738],
       [ 3.28287529]])}
Test complete.
Process with id: 34 finished in 14.287308343002223 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo master-automation,3.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node4,3.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ awk -F, '{print $2}'
++ grep 10.140.0.33 ip_address
+ dest_name=worker-node1
++ head -1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 808ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.768/259.788/259.803/0.012 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 808ms,rtt min/avg/max/mdev = 259.768/259.788/259.803/0.012 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.259/109.388/109.515/0.082 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.259/109.388/109.515/0.082 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.915/198.956/199.004/0.039 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.915/198.956/199.004/0.039 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.539/278.652/278.740/0.074 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 278.539/278.652/278.740/0.074 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 815ms'
++ tail -n 2
++ tail -1
++ ping -c 5 -i 0.2 -q 10.156.0.38
+ metric_rtt='rtt min/avg/max/mdev = 0.038/0.068/0.091/0.019 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 815ms,rtt min/avg/max/mdev = 0.038/0.068/0.091/0.019 ms'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy35
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[24.85699705],
       [ 2.22056423]]), 'worker-node2': array([[18.75675877],
       [ 0.15120323]]), 'worker-node3': array([[18.84601247],
       [ 0.57198924]]), 'worker-node4': array([[22.61483466],
       [ 1.78752705]])}
Test complete.
Process with id: 35 finished in 13.606126282000332 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=11.4
+ echo master-automation,11.4
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ ipa=10.128.0.35
++ awk -F, '{print $2}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.4
+ echo worker-node2,9.4
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node3,6.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=31.2
+ echo worker-node4,31.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.779/259.805/259.887/0.041 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 259.779/259.805/259.887/0.041 ms, pipe 2'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.128.0.35 ip_address
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.329/109.358/109.405/0.031 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.329/109.358/109.405/0.031 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.957/199.009/199.068/0.041 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.957/199.009/199.068/0.041 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.564/278.650/278.710/0.054 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 278.564/278.650/278.710/0.054 ms, pipe 2'
+ read -r dest_ip
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 814ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.064/0.072/0.078/0.005 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 814ms,rtt min/avg/max/mdev = 0.064/0.072/0.078/0.005 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy36
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[23.79006735],
       [ 1.33520243]]), 'worker-node2': array([[18.6040968 ],
       [ 0.81790389]]), 'worker-node3': array([[19.37352105],
       [ 1.57977451]]), 'worker-node4': array([[26.51833137],
       [ 7.41716878]])}
Test complete.
Process with id: 36 finished in 11.91201091900075 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=17.6
+ echo master-automation,17.6
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node1,3.2
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.1
+ echo worker-node2,9.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.7
+ echo worker-node4,9.7
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 259.782/259.836/259.880/0.037 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.782/259.836/259.880/0.037 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ tail -n 2
++ head -1
++ ping -c 5 -i 0.2 -q 10.128.0.35
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.305/109.357/109.448/0.051 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.305/109.357/109.448/0.051 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 198.942/198.982/199.022/0.031 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.942/198.982/199.022/0.031 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.561/278.660/278.739/0.065 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 278.561/278.660/278.739/0.065 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 819ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.066/0.078/0.102/0.013 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 819ms,rtt min/avg/max/mdev = 0.066/0.078/0.102/0.013 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy37
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[28.30504213],
       [ 5.21209684]]), 'worker-node2': array([[22.35329198],
       [ 2.80573273]]), 'worker-node3': array([[21.69568321],
       [ 1.90569766]]), 'worker-node4': array([[25.33233897],
       [ 3.48899699]])}
Test complete.
Process with id: 37 finished in 18.13084648000222 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo master-automation,3.0
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=34.3
+ echo worker-node4,34.3
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 259.790/259.824/259.857/0.021 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 259.790/259.824/259.857/0.021 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 109.322/109.368/109.483/0.058 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.322/109.368/109.483/0.058 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.941/199.020/199.083/0.047 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.941/199.020/199.083/0.047 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 278.598/278.660/278.724/0.042 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 278.598/278.660/278.724/0.042 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 816ms'
++ tail -n 2
++ tail -1
++ ping -c 5 -i 0.2 -q 10.156.0.38
+ metric_rtt='rtt min/avg/max/mdev = 0.052/0.073/0.083/0.011 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 816ms,rtt min/avg/max/mdev = 0.052/0.073/0.083/0.011 ms'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy38
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[25.82691911],
       [ 2.13747032]]), 'worker-node2': array([[19.2186629 ],
       [-0.02895496]]), 'worker-node3': array([[19.0155225 ],
       [ 0.39211235]]), 'worker-node4': array([[26.24202035],
       [ 7.21638924]])}
Test complete.
Process with id: 38 finished in 13.526870385998336 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo master-automation,6.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node2,6.2
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=12.5
+ echo worker-node3,12.5
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.5
+ echo worker-node4,6.5
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ awk -F, '{print $1}'
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $2}'
++ grep 10.140.0.33 ip_address
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ tail -1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.779/259.808/259.873/0.033 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 259.779/259.808/259.873/0.033 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 109.334/109.390/109.448/0.037 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.334/109.390/109.448/0.037 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ head -1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.158.0.33
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ tail -n 2
++ tail -1
++ ping -c 5 -i 0.2 -q 10.158.0.33
+ metric_rtt='rtt min/avg/max/mdev = 198.928/198.973/199.023/0.031 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.928/198.973/199.023/0.031 ms'
+ read -r dest_ip
++ awk -F, '{print $2}'
++ grep 10.152.0.33 ip_address
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.092/278.129/278.175/0.034 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 278.092/278.129/278.175/0.034 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 815ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.063/0.081/0.093/0.011 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 815ms,rtt min/avg/max/mdev = 0.063/0.081/0.093/0.011 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ awk -F, '{print $3}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node2 labeled
ok: created action hellopy39
{
    "greeting": "Hello World!"
}
node/worker-node2 unlabeled
Best node for initial data: worker-node2
Predictions for initial data: {'worker-node1': array([[27.71479994],
       [ 4.53815239]]), 'worker-node2': array([[21.45964929],
       [ 1.90680536]]), 'worker-node3': array([[21.98688436],
       [ 3.09675642]]), 'worker-node4': array([[25.54107052],
       [ 3.67663498]])}
Test complete.
Process with id: 39 finished in 17.24411631899784 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.1
+ echo master-automation,9.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=22.6
+ echo worker-node4,22.6
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 807ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.779/259.818/259.882/0.035 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 807ms,rtt min/avg/max/mdev = 259.779/259.818/259.882/0.035 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.299/109.327/109.357/0.022 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.299/109.327/109.357/0.022 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.875/198.942/199.018/0.046 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.875/198.942/199.018/0.046 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 278.087/278.161/278.277/0.066 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 278.087/278.161/278.277/0.066 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 816ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.049/0.069/0.100/0.018 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 816ms,rtt min/avg/max/mdev = 0.049/0.069/0.100/0.018 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ awk -F, '{print $3}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node3 labeled
ok: created action hellopy40
{
    "greeting": "Hello World!"
}
node/worker-node3 unlabeled
Best node for initial data: worker-node3
Predictions for initial data: {'worker-node1': array([[26.00480511],
       [ 2.23746123]]), 'worker-node2': array([[1.93457594e+01],
       [1.53819845e-02]]), 'worker-node3': array([[19.09380018],
       [ 0.40492203]]), 'worker-node4': array([[24.90681269],
       [ 5.11308476]])}
Test complete.
Process with id: 40 finished in 17.746479931000067 seconds
Total execution time: 1629.7028553199998 seconds
error: Unable to delete action 'hellopy48': The requested resource does not exist. (code 3hE0aAHkYczXcOSdoPeW5AVMMTsWuJi1)
Run 'wsk --help' for usage.
Process Process-49:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy37
Process Process-38:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy38
error: Unable to delete action 'hellopy44': The requested resource does not exist. (code 4FHYIoIfamEewpRCpmEBr4mOhXgKtcNW)
Run 'wsk --help' for usage.
Process Process-39:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-45:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy12
Process Process-13:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy43': The requested resource does not exist. (code iecMqwdWc53VkdiloQdAtUB0zr2fJqmq)
Run 'wsk --help' for usage.
Process Process-44:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy11
Process Process-12:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy24
Process Process-25:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy16
ok: deleted action hellopy15
Process Process-17:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy8
Process Process-16:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy17
Process Process-9:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy49': The requested resource does not exist. (code jHOx669ve50a4QrQfcwP2evzEryJXqT5)
Run 'wsk --help' for usage.
ok: deleted action hellopy32
ok: deleted action hellopy30
Process Process-18:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy27
ok: deleted action hellopy31
ok: deleted action hellopy6
ok: deleted action hellopy26
ok: deleted action hellopy40
ok: deleted action hellopy7
error: Unable to delete action 'hellopy47': The requested resource does not exist. (code 6zQio7jK2XdA1w4u53kvJEq5yKv24hOw)
Run 'wsk --help' for usage.
Process Process-33:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-50:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy34
ok: deleted action hellopy19
Process Process-27:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-32:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-48:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-8:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-41:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-20:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-7:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-28:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-35:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-31:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy41': The requested resource does not exist. (code Je13rrfnsNj3RocKAe0uXFgVeb1ARFr5)
Run 'wsk --help' for usage.
Process Process-42:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy0': The requested resource does not exist. (code 56NpdbH5v7dQYDbeyfdJMkTITjUVuZYq)
Run 'wsk --help' for usage.
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy42': The requested resource does not exist. (code EbexKUeMQB2BBzTnn6g98C0hipR1nFDo)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy46': The requested resource does not exist. (code UvM8NVvn83H2JxIlclcW0wMjh8IRPUOk)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy45': The requested resource does not exist. (code SK4FXVxUkxs692miNTfVkrGjmis1M17y)
Run 'wsk --help' for usage.
Process Process-47:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-43:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-46:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy39
Process Process-40:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy36
Process Process-37:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy13
Process Process-14:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy23
Process Process-24:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy25
ok: deleted action hellopy10
Process Process-26:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-11:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy18
Process Process-19:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy3
ok: deleted action hellopy9
ok: deleted action hellopy4
Process Process-4:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-10:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-5:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy14
ok: deleted action hellopy21
Process Process-22:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-15:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy33
ok: deleted action hellopy35
Process Process-34:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-36:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy5
Process Process-6:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy22
ok: deleted action hellopy28
ok: deleted action hellopy20
ok: deleted action hellopy1
Process Process-2:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy29
Process Process-23:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-21:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy2
Process Process-30:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-29:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-3:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=15.6
+ echo master-automation,15.6
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.5
+ echo worker-node1,6.5
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.4
+ echo worker-node2,9.4
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ awk -F, '{print $3}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=8.6
+ echo worker-node4,8.6
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ awk -F, '{print $1}'
++ grep -v 10.156.0.38 ip_address
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ head -1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.140.0.33
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.930/259.957/260.026/0.035 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 259.930/259.957/260.026/0.035 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.377/109.476/109.528/0.058 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.377/109.476/109.528/0.058 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.956/198.998/199.027/0.024 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.956/198.998/199.027/0.024 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 810ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.342/278.390/278.449/0.038 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 810ms,rtt min/avg/max/mdev = 278.342/278.390/278.449/0.038 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 814ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.064/0.074/0.081/0.005 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 814ms,rtt min/avg/max/mdev = 0.064/0.074/0.081/0.005 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ awk -F, '{print $3}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node1 labeled
ok: created action hellopy1
{
    "greeting": "Hello World!"
}
node/worker-node1 unlabeled
Test complete.
Process with id: 1 finished in 111.56001451399788 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=2.9
+ echo master-automation,2.9
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node1,3.0
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.5
+ echo worker-node2,6.5
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node3,6.2
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.4
+ echo worker-node4,9.4
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.893/259.951/260.015/0.043 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 259.893/259.951/260.015/0.043 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.386/109.549/109.721/0.142 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.386/109.549/109.721/0.142 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.958/198.994/199.080/0.044 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 198.958/198.994/199.080/0.044 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 807ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.636/278.700/278.769/0.043 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 807ms,rtt min/avg/max/mdev = 278.636/278.700/278.769/0.043 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 813ms'
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.072/0.083/0.098/0.010 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 813ms,rtt min/avg/max/mdev = 0.072/0.083/0.098/0.010 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node1 labeled
ok: created action hellopy2
{
    "greeting": "Hello World!"
}
node/worker-node1 unlabeled
Test complete.
Process with id: 2 finished in 113.10127006300172 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo master-automation,3.2
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node2,0.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node3,0.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=8.8
+ echo worker-node4,8.8
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ awk -F, '{print $2}'
++ grep 10.140.0.33 ip_address
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.936/259.989/260.107/0.060 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 259.936/259.989/260.107/0.060 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.566/109.662/109.754/0.066 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.566/109.662/109.754/0.066 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 799ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.928/199.031/199.134/0.074 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 799ms,rtt min/avg/max/mdev = 198.928/199.031/199.134/0.074 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.457/278.538/278.695/0.090 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 278.457/278.538/278.695/0.090 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 813ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.042/0.058/0.069/0.009 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 813ms,rtt min/avg/max/mdev = 0.042/0.058/0.069/0.009 ms'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ awk -F, '{print $3}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node1 labeled
ok: created action hellopy3
{
    "greeting": "Hello World!"
}
node/worker-node1 unlabeled
Test complete.
Process with id: 3 finished in 112.85710635199939 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo master-automation,3.0
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node1,3.2
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ awk -F, '{print $3}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=2.9
+ echo worker-node2,2.9
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node4,6.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.786/259.856/259.935/0.051 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 259.786/259.856/259.935/0.051 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.490/109.573/109.673/0.059 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.490/109.573/109.673/0.059 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.882/198.984/199.025/0.053 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.882/198.984/199.025/0.053 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 277.999/278.047/278.104/0.035 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 277.999/278.047/278.104/0.035 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 815ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.043/0.081/0.140/0.036 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 815ms,rtt min/avg/max/mdev = 0.043/0.081/0.140/0.036 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node1 labeled
ok: created action hellopy4
{
    "greeting": "Hello World!"
}
node/worker-node1 unlabeled
Test complete.
Process with id: 4 finished in 110.58294009399833 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.5
+ echo master-automation,6.5
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node1,3.1
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node2,3.2
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=15.6
+ echo worker-node3,15.6
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node4,3.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 259.753/259.832/259.893/0.055 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 259.753/259.832/259.893/0.055 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.907/109.962/110.068/0.057 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.907/109.962/110.068/0.057 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.973/199.018/199.066/0.037 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.973/199.018/199.066/0.037 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.117/278.238/278.461/0.118 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 278.117/278.238/278.461/0.118 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 819ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.048/0.066/0.083/0.012 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 819ms,rtt min/avg/max/mdev = 0.048/0.066/0.083/0.012 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node1 labeled
ok: created action hellopy5
{
    "greeting": "Hello World!"
}
node/worker-node1 unlabeled
Test complete.
Process with id: 5 finished in 116.04209411900229 seconds
Total execution time: 685.8744521619992 seconds
error: Unable to delete action 'hellopy14': The requested resource does not exist. (code 0jjGKE9F5ZUxYiLhE5FrIEFnVYo9vRsU)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy19': The requested resource does not exist. (code xllvjxmzn24e3g0x0Qo7DimgDPUgl6Tc)
Run 'wsk --help' for usage.
Process Process-15:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy11': The requested resource does not exist. (code 0EwdVvgB0vHbiDGZNsvUxgxtaqfEVSuN)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy8': The requested resource does not exist. (code Ae8LSE7CIVx6WwxeMWXHap6ibGUM8hbz)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy17': The requested resource does not exist. (code PKC4WmED6kTXhkMe2fqWofNJ4PcUTlBL)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy20': The requested resource does not exist. (code V7pUQgC3h9J4LhUOVW5xDFtaAhHiA9Xp)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy18': The requested resource does not exist. (code 8wLy46T83x6ry5oO2efOAIEGhoxePGEF)
error: Unable to delete action 'hellopy36': The requested resource does not exist. (code GcGox8UULInx0dUPncb1kh85asqgXjTA)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy13': The requested resource does not exist. (code OkjeXa97cGmR3gKgtJb0Jk9gbfdb1wyq)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy23': The requested resource does not exist. (code TCPHmOlSiYMOXHu5v0m1Y5vGSuNrvy6B)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy38': The requested resource does not exist. (code golJAdB6bNdqQ8Fw8ArTaunCbqVpU8OX)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy7': The requested resource does not exist. (code G2cz52F3eaSRmQkjUQ0oGqeliWDJlH7f)
Run 'wsk --help' for usage.
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy35': The requested resource does not exist. (code sc4jK4R4giQomUZp4xle8lZba9WcdXQd)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy27': The requested resource does not exist. (code 6LEOikFqGgkr2ZSxQOJTeNmOuYO4j3x1)
Run 'wsk --help' for usage.
Process Process-12:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-19:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-37:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-28:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-36:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-20:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-24:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-21:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-9:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-14:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-39:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-18:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-8:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy28': The requested resource does not exist. (code 76UE9bTQPzg9q2F5QmX5bJIQTNkVTqM0)
Run 'wsk --help' for usage.
Process Process-29:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy2
Process Process-3:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy1
Process Process-2:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy37': The requested resource does not exist. (code FX5076dO7MZZtRLbtzg46Dvynr4oj9Qf)
Run 'wsk --help' for usage.
Process Process-38:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy41': The requested resource does not exist. (code Rsrr9JIJIsdUCFS7d6TrqkK8a2Qay69w)
Run 'wsk --help' for usage.
Process Process-42:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy26': The requested resource does not exist. (code cRgZP4VJ0ykOYTeztNa0K7GS6FsQOMw9)
Run 'wsk --help' for usage.
Process Process-27:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy42': The requested resource does not exist. (code xqtR6sJHPh5aHJiylXhsSg5t49qrgNEg)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy44': The requested resource does not exist. (code C7OcwCUQsv35iBGNC8hd4PoHvnqyJeSg)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy39': The requested resource does not exist. (code gKnl2jAer7tBKhx93S9GfB2cMcnWyAz1)
Run 'wsk --help' for usage.
Process Process-43:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-45:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-40:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy46': The requested resource does not exist. (code yMXN850BkkvwpfXoYK30McqKB6OXUdxs)
Run 'wsk --help' for usage.
Process Process-47:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy0': The requested resource does not exist. (code 1xbT3QHGR1nakEG2mazfGldWMxc9e61B)
Run 'wsk --help' for usage.
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy15': The requested resource does not exist. (code 1SjlRqfJxyN6zhNCOoac74SCNEfSpOOB)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy21': The requested resource does not exist. (code P05cvCHJhgEbimz8XDUhR8akPVNCZVAa)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy10': The requested resource does not exist. (code oNiIJ2mY6KCAYMmAwlilxiJCtxVgSYFR)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy9': The requested resource does not exist. (code uHWAzYjPKU6T90WCUPvP8u1eWglg8jMl)
Run 'wsk --help' for usage.
ok: deleted action hellopy4
error: Unable to delete action 'hellopy12': The requested resource does not exist. (code 4pW3vibpzwpQrEUsS0x84rCt2PzWICGP)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy6': The requested resource does not exist. (code ihQsu9lNeQbF7NuYxGFl4ID97R52ZDuu)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy16': The requested resource does not exist. (code nT1aJ6svKc4kyoOGouCQM71oujx2sw19)
Run 'wsk --help' for usage.
Process Process-5:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy34': The requested resource does not exist. (code kiddhCUwfzteQmUDuEGm5ZxpECSUHBJC)
Run 'wsk --help' for usage.
Process Process-13:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-35:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-17:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-11:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-16:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-7:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy5
Process Process-22:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-10:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
ok: deleted action hellopy3
error: Unable to delete action 'hellopy22': The requested resource does not exist. (code nPe8P93lvrAPRMAX1hx2dSsJSVB5FqoW)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy30': The requested resource does not exist. (code p6i9fl43ZU8oeDTE9wHjub75neoqwwzk)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy31': The requested resource does not exist. (code Xc4EXQnhhBjCDkfXjAgklwf7FTMaDaJV)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy33': The requested resource does not exist. (code LK3pFtYRERrcFs3xNbpBSRX8raZhSYlX)
Run 'wsk --help' for usage.
Process Process-4:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy32': The requested resource does not exist. (code zadqpD2RUvFWIbqL3yp8pD9Nf10ppjtq)
Run 'wsk --help' for usage.
Process Process-6:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
error: Unable to delete action 'hellopy47': The requested resource does not exist. (code p5SaCsjxUk9KwWdYTtEpxa1BNTAhQOBX)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy49': The requested resource does not exist. (code 4G2K3xfjc6a5vrtwtf3uefgYbrNJg8US)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy48': The requested resource does not exist. (code MER2oAamRLiAwqUohn8OsBzaXhyG2Hbc)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy25': The requested resource does not exist. (code uHnCn9jK1BIOYa6jLpLNY5zHbiOgpo36)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy40': The requested resource does not exist. (code mLkMnjMbebMF7eC6YWuzku0uHDbpjcU7)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy45': The requested resource does not exist. (code bo77iID67s0HJzHf2lmORNS6YnuW37bs)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy43': The requested resource does not exist. (code bYZSchf9VzhMZvup1BiUizuSpTZJdYl9)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy29': The requested resource does not exist. (code 6SVWNgKnIksTmJo5hj0UZCmxIImiNx0Y)
Run 'wsk --help' for usage.
error: Unable to delete action 'hellopy24': The requested resource does not exist. (code 7XoInBHrDuXbEGSYMEYWTbnSSmCT6pjH)
Run 'wsk --help' for usage.
Process Process-30:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-31:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-25:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-48:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-44:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-50:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-49:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-26:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-33:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-34:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-41:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-32:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-46:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
Process Process-23:
Traceback (most recent call last):
  File "/usr/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "clean.py", line 14, in run
    time.sleep(15)
NameError: name 'time' is not defined
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=12.5
+ echo master-automation,12.5
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.9
+ echo worker-node3,5.9
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.4
+ echo worker-node4,9.4
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.823/259.860/259.917/0.036 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 259.823/259.860/259.917/0.036 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.661/109.711/109.859/0.075 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 109.661/109.711/109.859/0.075 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 199.448/199.512/199.619/0.062 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 199.448/199.512/199.619/0.062 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.153/278.210/278.263/0.038 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 278.153/278.210/278.263/0.038 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 814ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.044/0.062/0.084/0.014 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 814ms,rtt min/avg/max/mdev = 0.044/0.062/0.084/0.014 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node1 labeled
ok: created action hellopy1
{
    "greeting": "Hello World!"
}
node/worker-node1 unlabeled
Test complete.
Process with id: 1 finished in 112.33121414099878 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=8.8
+ echo master-automation,8.8
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node1,3.2
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo worker-node2,6.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node4,3.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 259.735/259.796/259.866/0.045 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.735/259.796/259.866/0.045 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 109.682/109.725/109.840/0.058 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.682/109.725/109.840/0.058 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 199.396/199.525/199.719/0.107 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 199.396/199.525/199.719/0.107 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.112/278.148/278.209/0.035 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 278.112/278.148/278.209/0.035 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 823ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.060/0.070/0.099/0.014 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 823ms,rtt min/avg/max/mdev = 0.060/0.070/0.099/0.014 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node1 labeled
ok: created action hellopy2
{
    "greeting": "Hello World!"
}
node/worker-node1 unlabeled
Test complete.
Process with id: 2 finished in 112.88137827800165 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.1
+ echo master-automation,9.1
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ awk -F, '{print $2}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node1,3.2
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.4
+ echo worker-node3,9.4
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node4,0.0
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.795/259.842/259.913/0.038 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 259.795/259.842/259.913/0.038 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.477/109.519/109.573/0.032 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.477/109.519/109.573/0.032 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 199.403/199.450/199.490/0.031 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 199.403/199.450/199.490/0.031 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.083/278.151/278.209/0.054 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 278.083/278.151/278.209/0.054 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 815ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.061/0.085/0.108/0.014 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 815ms,rtt min/avg/max/mdev = 0.061/0.085/0.108/0.014 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node1 labeled
ok: created action hellopy3
{
    "greeting": "Hello World!"
}
node/worker-node1 unlabeled
Test complete.
Process with id: 3 finished in 113.90743479999946 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo master-automation,6.1
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ awk -F, '{print $3}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node1,3.1
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.5
+ echo worker-node3,6.5
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.4
+ echo worker-node4,9.4
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 806ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.750/259.819/259.848/0.035 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 806ms,rtt min/avg/max/mdev = 259.750/259.819/259.848/0.035 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.517/109.570/109.623/0.035 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.517/109.570/109.623/0.035 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.951/199.019/199.061/0.038 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.951/199.019/199.061/0.038 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.070/278.128/278.191/0.042 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 278.070/278.128/278.191/0.042 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 814ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.074/0.091/0.108/0.013 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 814ms,rtt min/avg/max/mdev = 0.074/0.091/0.108/0.013 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node1 labeled
ok: created action hellopy4
{
    "greeting": "Hello World!"
}
node/worker-node1 unlabeled
Test complete.
Process with id: 4 finished in 109.3569159969993 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ awk -F, '{print $2}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=20.0
+ echo master-automation,20.0
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node2,3.0
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node3,0.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=9.4
+ echo worker-node4,9.4
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ grep 10.140.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.748/259.816/259.892/0.055 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 259.748/259.816/259.892/0.055 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 109.459/109.516/109.566/0.040 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.459/109.516/109.566/0.040 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 800ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.952/199.043/199.189/0.083 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 800ms,rtt min/avg/max/mdev = 198.952/199.043/199.189/0.083 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.147/278.203/278.281/0.045 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 278.147/278.203/278.281/0.045 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 815ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.057/0.079/0.090/0.012 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 815ms,rtt min/avg/max/mdev = 0.057/0.079/0.090/0.012 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node1 labeled
ok: created action hellopy5
{
    "greeting": "Hello World!"
}
node/worker-node1 unlabeled
Test complete.
Process with id: 5 finished in 110.15635307699995 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.1
+ echo master-automation,6.1
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node1,3.2
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node2,3.1
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ awk -F, '{print $2}'
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node3,0.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.2
+ echo worker-node4,3.2
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ awk -F, '{print $2}'
++ grep 10.140.0.33 ip_address
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 804ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.785/259.828/259.877/0.029 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 804ms,rtt min/avg/max/mdev = 259.785/259.828/259.877/0.029 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.416/109.490/109.603/0.063 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 109.416/109.490/109.603/0.063 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 198.927/198.992/199.053/0.044 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 198.927/198.992/199.053/0.044 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.127/278.155/278.195/0.027 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 278.127/278.155/278.195/0.027 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 815ms'
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.049/0.083/0.109/0.022 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 815ms,rtt min/avg/max/mdev = 0.049/0.083/0.109/0.022 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node1 labeled
ok: created action hellopy6
{
    "greeting": "Hello World!"
}
node/worker-node1 unlabeled
Test complete.
Process with id: 6 finished in 114.47861571899921 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ awk -F, '{print $3}'
++ echo 10.156.0.38,master-automation,europe-west3-a
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=11.4
+ echo master-automation,11.4
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=0.0
+ echo worker-node1,0.0
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ awk -F, '{print $2}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=5.9
+ echo worker-node2,5.9
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node3,3.0
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.0
+ echo worker-node4,3.0
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ awk -F, '{print $2}'
++ grep 10.140.0.33 ip_address
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ tail -1
++ tail -n 2
++ ping -c 5 -i 0.2 -q 10.140.0.33
+ metric_rtt='rtt min/avg/max/mdev = 259.725/259.788/259.842/0.039 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 259.725/259.788/259.842/0.039 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 803ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.415/109.499/109.586/0.071 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 803ms,rtt min/avg/max/mdev = 109.415/109.499/109.586/0.071 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 199.009/199.042/199.076/0.022 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 199.009/199.042/199.076/0.022 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.058/278.128/278.200/0.048 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 278.058/278.128/278.200/0.048 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 814ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ tail -1
+ metric_rtt='rtt min/avg/max/mdev = 0.048/0.087/0.145/0.036 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 814ms,rtt min/avg/max/mdev = 0.048/0.087/0.145/0.036 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $3}'
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
node/worker-node1 labeled
ok: created action hellopy7
{
    "greeting": "Hello World!"
}
node/worker-node1 unlabeled
Test complete.
Process with id: 7 finished in 119.89831985099954 seconds
#!/bin/bash -vx


# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file for ping metrics
ping_output_file="ping_metrics.csv"
+ ping_output_file=ping_metrics.csv

# Path to the output file for CPU utilization metrics
cpu_output_file="cpu_metrics.csv"
+ cpu_output_file=cpu_metrics.csv


# Collect CPU usage details for each machine
echo > $cpu_output_file
+ echo
while read -r ip; do
	ipa=$(echo $ip | awk -F',' '{print $1}')
    name=$(echo $ip | awk -F',' '{print $2}')
    location=$(echo $ip | awk -F',' '{print $3}')
    cpu_metrics=$(ssh -n -o StrictHostKeyChecking=no "$ipa" "top -b -n 1 | grep 'Cpu(s)' | awk '{print \$2}'")
    echo "$name,$cpu_metrics" >> $cpu_output_file
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
++ ssh -n -o StrictHostKeyChecking=no 10.156.0.38 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=8.6
+ echo master-automation,8.6
+ read -r ip
++ awk -F, '{print $1}'
++ echo 10.140.0.33,worker-node1,asia-east1-a
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.140.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=6.2
+ echo worker-node1,6.2
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ awk -F, '{print $3}'
++ echo 10.128.0.35,worker-node2,us-central1-a
+ location=us-central1-a
++ ssh -n -o StrictHostKeyChecking=no 10.128.0.35 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=12.5
+ echo worker-node2,12.5
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
++ ssh -n -o StrictHostKeyChecking=no 10.158.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node3,3.1
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ awk -F, '{print $2}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
++ ssh -n -o StrictHostKeyChecking=no 10.152.0.33 'top -b -n 1 | grep '\''Cpu(s)'\'' | awk '\''{print $2}'\'''
+ cpu_metrics=3.1
+ echo worker-node4,3.1
+ read -r ip
#!/bin/bash -vx

# Path to the file containing IP addresses
ip_file="ip_address"
+ ip_file=ip_address

# Path to the output file
output_file="ping_metrics.csv"
+ output_file=ping_metrics.csv

# Loop through each IP address in the file and ping it
echo > "$output_file"
+ echo
while read -r ip; do
    # Parse the IP address, name, and location from the line in the file
    ipa=$(echo "$ip" | awk -F',' '{print $1}')
    name=$(echo "$ip" | awk -F',' '{print $2}')
    location=$(echo "$ip" | awk -F',' '{print $3}')

    # Ping the IP address of each machine and capture the metrics
    if [ "$name" = "master-automation" ]; then
        while read -r dest_ip; do
            dest_name=$(grep "$dest_ip" "$ip_file" | awk -F',' '{print $2}')
            metrics=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | head -1)
            metric_rtt=$(ping -c 5 -i 0.2 -q "$dest_ip" | tail -n 2 | tail -1)

            # Write the metrics to the output file with the name of the source machine
            echo "$name,$dest_ip,$dest_name,$metrics,$metric_rtt" >> "$output_file"
        done < <(grep -v "$ipa" "$ip_file" | awk -F',' '{print $1}')

        # Ping the IP address of the machine itself and capture the metrics
        metrics=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | head -1)
        metric_rtt=$(ping -c 5 -i 0.2 -q "$ipa" | tail -n 2 | tail -1)

        # Write the metrics to the output file with the name of the source machine
        echo "$name,$ipa,$name,$metrics,$metric_rtt" >> "$output_file"
    fi
done < "$ip_file"
+ read -r ip
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $1}'
+ ipa=10.156.0.38
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $2}'
+ name=master-automation
++ echo 10.156.0.38,master-automation,europe-west3-a
++ awk -F, '{print $3}'
+ location=europe-west3-a
+ '[' master-automation = master-automation ']'
+ read -r dest_ip
++ grep -v 10.156.0.38 ip_address
++ awk -F, '{print $1}'
++ awk -F, '{print $2}'
++ grep 10.140.0.33 ip_address
+ dest_name=worker-node1
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 805ms'
++ ping -c 5 -i 0.2 -q 10.140.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 259.760/259.833/259.954/0.066 ms, pipe 2'
+ echo 'master-automation,10.140.0.33,worker-node1,5 packets transmitted, 5 received, 0% packet loss, time 805ms,rtt min/avg/max/mdev = 259.760/259.833/259.954/0.066 ms, pipe 2'
+ read -r dest_ip
++ grep 10.128.0.35 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node2
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.128.0.35
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 109.986/110.049/110.120/0.053 ms'
+ echo 'master-automation,10.128.0.35,worker-node2,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 109.986/110.049/110.120/0.053 ms'
+ read -r dest_ip
++ grep 10.158.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node3
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 801ms'
++ ping -c 5 -i 0.2 -q 10.158.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 199.367/199.497/199.600/0.078 ms'
+ echo 'master-automation,10.158.0.33,worker-node3,5 packets transmitted, 5 received, 0% packet loss, time 801ms,rtt min/avg/max/mdev = 199.367/199.497/199.600/0.078 ms'
+ read -r dest_ip
++ grep 10.152.0.33 ip_address
++ awk -F, '{print $2}'
+ dest_name=worker-node4
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ head -1
++ tail -n 2
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 802ms'
++ ping -c 5 -i 0.2 -q 10.152.0.33
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 278.428/278.514/278.598/0.073 ms, pipe 2'
+ echo 'master-automation,10.152.0.33,worker-node4,5 packets transmitted, 5 received, 0% packet loss, time 802ms,rtt min/avg/max/mdev = 278.428/278.514/278.598/0.073 ms, pipe 2'
+ read -r dest_ip
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -n 2
++ head -1
+ metrics='5 packets transmitted, 5 received, 0% packet loss, time 817ms'
++ ping -c 5 -i 0.2 -q 10.156.0.38
++ tail -1
++ tail -n 2
+ metric_rtt='rtt min/avg/max/mdev = 0.065/0.084/0.107/0.016 ms'
+ echo 'master-automation,10.156.0.38,master-automation,5 packets transmitted, 5 received, 0% packet loss, time 817ms,rtt min/avg/max/mdev = 0.065/0.084/0.107/0.016 ms'
+ read -r ip
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $1}'
+ ipa=10.140.0.33
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $2}'
+ name=worker-node1
++ echo 10.140.0.33,worker-node1,asia-east1-a
++ awk -F, '{print $3}'
+ location=asia-east1-a
+ '[' worker-node1 = master-automation ']'
+ read -r ip
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $1}'
+ ipa=10.128.0.35
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $2}'
+ name=worker-node2
++ echo 10.128.0.35,worker-node2,us-central1-a
++ awk -F, '{print $3}'
+ location=us-central1-a
+ '[' worker-node2 = master-automation ']'
+ read -r ip
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $1}'
+ ipa=10.158.0.33
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $2}'
+ name=worker-node3
++ echo 10.158.0.33,worker-node3,southamerica-east1-a
++ awk -F, '{print $3}'
+ location=southamerica-east1-a
+ '[' worker-node3 = master-automation ']'
+ read -r ip
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $1}'
+ ipa=10.152.0.33
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
++ awk -F, '{print $2}'
+ name=worker-node4
++ awk -F, '{print $3}'
++ echo 10.152.0.33,worker-node4,australia-southeast1-a
+ location=australia-southeast1-a
+ '[' worker-node4 = master-automation ']'
+ read -r ip
